<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Elijah</title>
  
  
  <link href="https://sreok.github.io/rss.xml" rel="self"/>
  
  <link href="https://sreok.github.io/"/>
  <updated>2025-07-01T06:40:20.809Z</updated>
  <id>https://sreok.github.io/</id>
  
  <author>
    <name>Elijah</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【笔记】基于github Page创建hexo个人博客</title>
    <link href="https://sreok.github.io/2025/05/27/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91%E5%9F%BA%E4%BA%8Egithub%20page%E5%88%9B%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://sreok.github.io/2025/05/27/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91%E5%9F%BA%E4%BA%8Egithub%20page%E5%88%9B%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2025-05-27T09:06:03.000Z</published>
    <updated>2025-07-01T06:40:20.809Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><ul><li>Node.js：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li><li>Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li></ul><h3 id="链接Github"><a href="#链接Github" class="headerlink" title="链接Github"></a>链接Github</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="创建SSH密钥"><a href="#创建SSH密钥" class="headerlink" title="创建SSH密钥"></a>创建SSH密钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="添加密匙"><a href="#添加密匙" class="headerlink" title="添加密匙"></a>添加密匙</h3><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><h3 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h3><p>打开 Git Bash，输入 ssh -T <a href="mailto:&#x67;&#x69;&#116;&#64;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;">&#x67;&#x69;&#116;&#64;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#x6d;</a> 出现 “Are you sure……”，输入 yes 回车确认。</p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>填写仓库名，格式必须为<code>&lt;用户名&gt;.github.io</code>，然后点击<code>Create repository</code>。</p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>使用 npm 一键安装 Hexo 博客程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Mac 用户需要管理员权限（sudo）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h3><p>创建blog文件夹<br>进入并输入以下命令完成初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init      # 初始化</span><br><span class="line">npm install    # 安装组件</span><br></pre></td></tr></table></figure><h3 id="启动本地服务器进行预览"><a href="#启动本地服务器进行预览" class="headerlink" title="启动本地服务器进行预览"></a>启动本地服务器进行预览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo s   # 启动预览,访问 http://localhost:4000</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="创建新页面"><a href="#创建新页面" class="headerlink" title="创建新页面"></a>创建新页面</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h4 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h4><p><code>source/_posts</code>目录下创建markdown文章</p><p>了解更多：<a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>本博客主题：<a href="https://github.com/sreok/hexo-theme-Anatole2">hexo-theme-Anatole2</a>，文档在README.md<br>官方主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><h3 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h3><p>安装 hexo-deployer-git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后修改 _config.yml 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: &#x27;https://github.com/用户名/用户名.github.io.git&#x27;</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行<code>hexo d</code>将网站上传部署到 GitHub Pages。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li>npm 下载速度慢<br> 临时更换方法：在 npm 安装命令后面加上： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--registry https://registry.npm.taobao.org </span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Node.js：&lt;a href=&quot;https://nodejs.org/zh-cn&quot;&gt;https://nodej</summary>
      
    
    
    
    <category term="Linux" scheme="https://sreok.github.io/categories/Linux/"/>
    
    
    <category term="hexo" scheme="https://sreok.github.io/tags/hexo/"/>
    
    <category term="Github Page" scheme="https://sreok.github.io/tags/Github-Page/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】基于Percona Operator支持全命名空间创建PXC集群（manifest方式）</title>
    <link href="https://sreok.github.io/2025/02/26/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E5%9F%BA%E4%BA%8EPercona%20Operator%E6%94%AF%E6%8C%81%E5%85%A8%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%88%9B%E5%BB%BAPXC%E9%9B%86%E7%BE%A4%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2025/02/26/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E5%9F%BA%E4%BA%8EPercona%20Operator%E6%94%AF%E6%8C%81%E5%85%A8%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%88%9B%E5%BB%BAPXC%E9%9B%86%E7%BE%A4%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2025-02-26T09:06:03.000Z</published>
    <updated>2025-06-30T09:27:57.104Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://docs.percona.com/percona-operator-for-mysql/pxc/kubernetes.html">通用 Kubernetes 安装 - Percona Operator for MySQL — Generic Kubernetes installation - Percona Operator for MySQL</a></p><h3 id="安装Operator"><a href="#安装Operator" class="headerlink" title="安装Operator"></a><strong>安装Operator</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone -b v1.14.0 https://github.com/percona/percona-xtradb-cluster-operator</span><br><span class="line">cd percona-xtradb-cluster-operator</span><br></pre></td></tr></table></figure><h4 id="方式一：分步安装"><a href="#方式一：分步安装" class="headerlink" title="方式一：分步安装"></a><strong>方式一：分步安装</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deploy/crd.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deploy/cw-operator.yaml -n kube-system</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/pxc-operator/kube-system/g&quot; deploy/cw-rbac.yaml</span><br><span class="line">sed -i &quot;s/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g&quot; deploy/cw-operator.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deploy/cw-rbac.yaml -n kube-system</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deploy/secrets.yaml -n kube-system</span><br></pre></td></tr></table></figure><h4 id="方式二：简易安装"><a href="#方式二：简易安装" class="headerlink" title="方式二：简易安装"></a><strong>方式二：简易安装</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/pxc-operator/kube-system/g&quot; deploy/cw-bundle.yaml</span><br><span class="line">sed -i &quot;s/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g&quot; deploy/cw-bundle.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f deploy/crd.yaml</span><br><span class="line">kubectl apply -f deploy/cw-bundle.yaml -n kube-system</span><br></pre></td></tr></table></figure><h3 id="安装pxc集群"><a href="#安装pxc集群" class="headerlink" title="安装pxc集群"></a><strong>安装pxc集群</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim deploy/cr.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: pxc.percona.com/v1</span><br><span class="line">kind: PerconaXtraDBCluster</span><br><span class="line">metadata:</span><br><span class="line">  name: cluster1</span><br><span class="line">  finalizers:</span><br><span class="line">    - delete-pxc-pods-in-order</span><br><span class="line">spec:</span><br><span class="line">  crVersion: 1.14.0</span><br><span class="line">  allowUnsafeConfigurations: false</span><br><span class="line">  updateStrategy: SmartUpdate</span><br><span class="line">  upgradeOptions:</span><br><span class="line">    versionServiceEndpoint: https://check.percona.com</span><br><span class="line">    apply: disabled</span><br><span class="line">    schedule: &quot;0 4 * * *&quot;</span><br><span class="line">  pxc:</span><br><span class="line">    size: 3</span><br><span class="line">    image: percona/percona-xtradb-cluster:8.0.35-27.1</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    autoRecovery: true</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        memory: 1G</span><br><span class="line">        cpu: 600m</span><br><span class="line">    affinity:</span><br><span class="line">      antiAffinityTopologyKey: &quot;kubernetes.io/hostname&quot;</span><br><span class="line">    podDisruptionBudget:</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">    volumeSpec:</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">        storageClassName: nfs-storage # 改为实际storageclass</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 6G</span><br><span class="line">    gracePeriod: 600</span><br><span class="line">  haproxy:</span><br><span class="line">    enabled: true</span><br><span class="line">    size: 3</span><br><span class="line">    image: percona/percona-xtradb-cluster-operator:1.14.0-haproxy</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        memory: 1G</span><br><span class="line">        cpu: 600m</span><br><span class="line">    affinity:</span><br><span class="line">      antiAffinityTopologyKey: &quot;kubernetes.io/hostname&quot;</span><br><span class="line">    podDisruptionBudget:</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">    gracePeriod: 30</span><br><span class="line">  proxysql:</span><br><span class="line">    enabled: false</span><br><span class="line">    size: 3</span><br><span class="line">    image: percona/percona-xtradb-cluster-operator:1.14.0-proxysql</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        memory: 1G</span><br><span class="line">        cpu: 600m</span><br><span class="line">    affinity:</span><br><span class="line">      antiAffinityTopologyKey: &quot;kubernetes.io/hostname&quot;</span><br><span class="line">    volumeSpec:</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 2G</span><br><span class="line">    podDisruptionBudget:</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">    gracePeriod: 30</span><br><span class="line">  logcollector:</span><br><span class="line">    enabled: true</span><br><span class="line">    image: percona/percona-xtradb-cluster-operator:1.14.0-logcollector</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        memory: 100M</span><br><span class="line">        cpu: 200m</span><br><span class="line">  pmm:</span><br><span class="line">    enabled: false</span><br><span class="line">    image: percona/pmm-client:2.41.1</span><br><span class="line">    serverHost: monitoring-service</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        memory: 150M</span><br><span class="line">        cpu: 300m</span><br><span class="line">  backup:</span><br><span class="line">    image: percona/percona-xtradb-cluster-operator:1.14.0-pxc8.0-backup-pxb8.0.35</span><br><span class="line">    pitr:</span><br><span class="line">      enabled: false</span><br><span class="line">      storageName: STORAGE-NAME-HERE</span><br><span class="line">      timeBetweenUploads: 60</span><br><span class="line">      timeoutSeconds: 60</span><br><span class="line">    storages:</span><br><span class="line">      s3-us-west:</span><br><span class="line">        type: s3</span><br><span class="line">        verifyTLS: true</span><br><span class="line">        s3:</span><br><span class="line">          bucket: S3-BACKUP-BUCKET-NAME-HERE</span><br><span class="line">          credentialsSecret: my-cluster-name-backup-s3</span><br><span class="line">          region: us-west-2</span><br><span class="line">      azure-blob:</span><br><span class="line">        type: azure</span><br><span class="line">        azure:</span><br><span class="line">          credentialsSecret: azure-secret</span><br><span class="line">          container: test</span><br><span class="line">      fs-pvc:</span><br><span class="line">        type: filesystem</span><br><span class="line">        volume:</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            storageClassName: nfs-storage  # 改为实际storageclass</span><br><span class="line">            accessModes: [ &quot;ReadWriteOnce&quot; ]</span><br><span class="line">            resources:</span><br><span class="line">              requests:</span><br><span class="line">                storage: 6G</span><br><span class="line">    schedule:</span><br><span class="line">      - name: &quot;daily-backup&quot;</span><br><span class="line">        schedule: &quot;0 0 * * *&quot;</span><br><span class="line">        keep: 5</span><br><span class="line">        storageName: fs-pvc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create ns pxc</span><br><span class="line">kubectl apply -f cr.yaml -n pxc</span><br></pre></td></tr></table></figure><h3 id="最小化pxc集群"><a href="#最小化pxc集群" class="headerlink" title="最小化pxc集群"></a><strong>最小化pxc集群</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim cr-minimal.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: pxc.percona.com/v1</span><br><span class="line">kind: PerconaXtraDBCluster</span><br><span class="line">metadata:</span><br><span class="line">  name: minimal-cluster</span><br><span class="line">spec:</span><br><span class="line">  crVersion: 1.14.0</span><br><span class="line">  secretsName: minimal-cluster-secrets</span><br><span class="line">  allowUnsafeConfigurations: true</span><br><span class="line">  upgradeOptions:</span><br><span class="line">    apply: disabled</span><br><span class="line">    schedule: &quot;0 4 * * *&quot;</span><br><span class="line">  pxc:</span><br><span class="line">    size: 1</span><br><span class="line">    image: percona/percona-xtradb-cluster:8.0.35-27.1</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    volumeSpec:</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">        storageClassName: nfs-storage</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 6G</span><br><span class="line">  haproxy:</span><br><span class="line">    enabled: true</span><br><span class="line">    size: 1</span><br><span class="line">    image: percona/percona-xtradb-cluster-operator:1.14.0-haproxy</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">  logcollector:</span><br><span class="line">    enabled: true</span><br><span class="line">    image: percona/percona-xtradb-cluster-operator:1.14.0-logcollector</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f cr-minimal.yaml</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a><strong>卸载</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pxc &lt;pxc集群名称&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f deploy/cw-bundle.yaml</span><br><span class="line">kubectl delete -f deploy/crd.yaml</span><br><span class="line">kubectl delete validatingwebhookconfigurations percona-xtradbcluster-webhook</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;官方文档：&lt;a href=&quot;https://docs.percona.com/percona-operator-for-mysql/pxc/kubernetes.html&quot;&gt;通用 Kubernetes 安装 - Percona Operator for MySQL — Ge</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="MySQL" scheme="https://sreok.github.io/tags/MySQL/"/>
    
    <category term="PXC" scheme="https://sreok.github.io/tags/PXC/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】基于 PostgreSQL Operator 在 k8s 集群中部署Postgres 集群并启动 PostGIS（kustomize方式）</title>
    <link href="https://sreok.github.io/2025/02/17/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E5%9F%BA%E4%BA%8E%20PostgreSQL%20Operator%20%E5%9C%A8%20k8s%20%E9%9B%86%E7%BE%A4%E4%B8%AD%E9%83%A8%E7%BD%B2Postgres%20%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%90%AF%E5%8A%A8%20PostGIS%EF%BC%88kustomize%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2025/02/17/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E5%9F%BA%E4%BA%8E%20PostgreSQL%20Operator%20%E5%9C%A8%20k8s%20%E9%9B%86%E7%BE%A4%E4%B8%AD%E9%83%A8%E7%BD%B2Postgres%20%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%90%AF%E5%8A%A8%20PostGIS%EF%BC%88kustomize%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2025-02-17T09:06:03.000Z</published>
    <updated>2025-07-02T14:46:25.270Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 <span class="string">&quot;https://github.com/CrunchyData/postgres-operator-examples.git&quot;</span></span><br><span class="line"><span class="built_in">cd</span> postgres-operator-examples</span><br></pre></td></tr></table></figure><h3 id="安装PGO"><a href="#安装PGO" class="headerlink" title="安装PGO"></a><strong>安装PGO</strong></h3><p>官方地址：<a href="https://access.crunchydata.com/documentation/postgres-operator/latest/quickstart">https://access.crunchydata.com/documentation/postgres-operator/latest/quickstart</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -k kustomize/install/namespace</span><br><span class="line">kubectl apply --server-side -k kustomize/install/default</span><br></pre></td></tr></table></figure><h3 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a><strong>配置集群</strong></h3><p>参考地址：<a href="https://www.crunchydata.com/blog/postgis-with-postgresql-operator">https://www.crunchydata.com/blog/postgis-with-postgresql-operator</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim kustomize/postgres/postgres.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: postgres-operator.crunchydata.com/v1beta1</span><br><span class="line">kind: PostgresCluster</span><br><span class="line">metadata:</span><br><span class="line">  name: hippo</span><br><span class="line">spec:</span><br><span class="line">  #image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:ubi8-16.3-0</span><br><span class="line">  image : registry.developers.crunchydata.com/crunchydata/crunchy-postgres-gis:ubi8-16.3-3.4-0</span><br><span class="line">  #image: RELATED_IMAGE_POSTGRES_16_GIS_3.4</span><br><span class="line">  postgresVersion: 16</span><br><span class="line">  postGISVersion: &quot;3.4&quot;</span><br><span class="line">  instances:</span><br><span class="line">    - name: instance1</span><br><span class="line">      dataVolumeClaimSpec:</span><br><span class="line">        accessModes:</span><br><span class="line">        - &quot;ReadWriteOnce&quot;</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 100Gi</span><br><span class="line">  users:</span><br><span class="line">  - name: &quot;hippo&quot;</span><br><span class="line">    options: &#x27;SUPERUSER&#x27;</span><br><span class="line">  backups:</span><br><span class="line">    pgbackrest:</span><br><span class="line">      image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.51-0</span><br><span class="line">      repos:</span><br><span class="line">      - name: repo1</span><br><span class="line">        volume:</span><br><span class="line">          volumeClaimSpec:</span><br><span class="line">            accessModes:</span><br><span class="line">            - &quot;ReadWriteOnce&quot;</span><br><span class="line">            resources:</span><br><span class="line">              requests:</span><br><span class="line">                storage: 100Gi</span><br></pre></td></tr></table></figure><h3 id="安装集群"><a href="#安装集群" class="headerlink" title="安装集群"></a><strong>安装集群</strong></h3><p>官方地址：<a href="https://access.crunchydata.com/documentation/postgres-operator/latest/tutorials/basic-setup/create-cluster">Create a Postgres Cluster (</a><a href="http://crunchydata.com/">crunchydata.com</a><a href="https://access.crunchydata.com/documentation/postgres-operator/latest/tutorials/basic-setup/create-cluster">)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -k kustomize/postgres</span><br></pre></td></tr></table></figure><h4 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a><strong>已知问题</strong></h4><h5 id="问题1"><a href="#问题1" class="headerlink" title="问题1:"></a><strong>问题1:</strong></h5><p>storageclass调用nfs失败</p><p>原因： 没有应用nfs_provisioner</p><p>解决： yaml文件放在&#x2F;data&#x2F;nfsyml目录下。</p><hr><h5 id="问题2"><a href="#问题2" class="headerlink" title="问题2:"></a><strong>问题2:</strong></h5><p>Output: mount: &#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;pods&#x2F;bd8b92ad-3311-4743-8154-0e75e5298fbe&#x2F;volumes&#x2F;<a href="http://kubernetes.io/">kubernetes.io</a>~nfs&#x2F;pvc-db9f2bae-9eae-4f5a-91d0-831cf832389c: bad option; for several filesystems (e.g. nfs, cifs) you might need a &#x2F;sbin&#x2F;mount.&lt;type&gt; helper program.</p><p>原因： node节点没有客户端，ubuntu高版本必须安装utils和common centos系统安装utils即可</p><p>解决： 节点安装nfs客户端 <code>apt install nfs-common -y</code></p><hr><h5 id="问题3："><a href="#问题3：" class="headerlink" title="问题3："></a><strong>问题3：</strong></h5><p>Output: mount.nfs: access denied by server while mounting 192.168.0.170:&#x2F;postgres-data</p><p>原因：nfs server配置错误</p><p>解决：确认nfs的ip和端口，重启nfs-server</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a><strong>配置</strong></h3><blockquote><p>pgo使用PostgresCluster资源说明，官方地址：<a href="https://access.crunchydata.com/documentation/postgres-operator/latest/references/crd/5.5.x/postgrescluster">PostgresCluster (</a><a href="http://crunchydata.com/">crunchydata.com</a><a href="https://access.crunchydata.com/documentation/postgres-operator/latest/references/crd/5.5.x/postgrescluster">)</a></p></blockquote><h4 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a><strong>高可用</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit postgresclusters.postgres-operator.crunchydata.com -n postgres-operator hippo # 修改replicas = 2</span><br></pre></td></tr></table></figure><h4 id="PostGIS"><a href="#PostGIS" class="headerlink" title="PostGIS"></a><strong>PostGIS</strong></h4><blockquote><p>如果安装时制定了gis的地址就不需要这一步</p></blockquote><h5 id="修改镜像"><a href="#修改镜像" class="headerlink" title="修改镜像"></a><strong>修改镜像</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit postgresclusters -n postgres-operator hippo</span><br></pre></td></tr></table></figure><h5 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a><strong>查看镜像</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat kustomize/install/manager/manager.yaml</span><br></pre></td></tr></table></figure><h5 id="替换spec-image镜像地址"><a href="#替换spec-image镜像地址" class="headerlink" title="替换spec.image镜像地址"></a><strong>替换spec.image镜像地址</strong></h5><blockquote><p>这里使用postgre v16和gis v3.4</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registry.developers.crunchydata.com/crunchydata/crunchy-postgres-gis:ubi8-16.3-3.4-0</span><br></pre></td></tr></table></figure><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a><strong>连接</strong></h3><h4 id="直接连接"><a href="#直接连接" class="headerlink" title="直接连接"></a><strong>直接连接</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql $(kubectl -n postgres-operator get secrets hippo-pguser-hippo -o go-template=&#x27;&#123;&#123;.data.uri | base64decode&#125;&#125;&#x27;)</span><br></pre></td></tr></table></figure><h4 id="端口转发连接"><a href="#端口转发连接" class="headerlink" title="端口转发连接"></a><strong>端口转发连接</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PG_CLUSTER_PRIMARY_POD=$(kubectl get pod \</span><br><span class="line">  -n postgres-operator \</span><br><span class="line">  -o name \</span><br><span class="line">  -l postgres-operator.crunchydata.com/cluster=hippo,postgres-operator.crunchydata.com/role=master)</span><br><span class="line">​</span><br><span class="line">kubectl -n postgres-operator port-forward &quot;$&#123;PG_CLUSTER_PRIMARY_POD&#125;&quot; --address 0.0.0.0 5432:5432</span><br></pre></td></tr></table></figure><h5 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a><strong>获取密码</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secrets -n postgres-operator &quot;hippo-pguser-hippo&quot; -o go-template=&#x27;&#123;&#123;.data.password | base64decode&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure><h5 id="获取用户"><a href="#获取用户" class="headerlink" title="获取用户"></a><strong>获取用户</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secrets -n postgres-operator &quot;hippo-pguser-hippo&quot; -o go-template=&#x27;&#123;&#123;.data.user | base64decode&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure><h5 id="获取数据库"><a href="#获取数据库" class="headerlink" title="获取数据库"></a><strong>获取数据库</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secrets -n postgres-operator &quot;hippo-pguser-hippo&quot; -o go-template=&#x27;&#123;&#123;.data.dbname | base64decode&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure><h5 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -h localhost -U hippo </span><br></pre></td></tr></table></figure><blockquote><p>输入密码</p></blockquote><h3 id="删除集群"><a href="#删除集群" class="headerlink" title="删除集群"></a><strong>删除集群</strong></h3><h4 id="卸载集群"><a href="#卸载集群" class="headerlink" title="卸载集群"></a><strong>卸载集群</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -k kustomize/postgres</span><br></pre></td></tr></table></figure><h4 id="卸载pgo"><a href="#卸载pgo" class="headerlink" title="卸载pgo"></a><strong>卸载pgo</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -k kustomize/install/default</span><br><span class="line">kubectl delete -k kustomize/install/namespace</span><br></pre></td></tr></table></figure><h4 id="已知问题-1"><a href="#已知问题-1" class="headerlink" title="已知问题"></a><strong>已知问题</strong></h4><h5 id="namespace-terminal"><a href="#namespace-terminal" class="headerlink" title="namespace terminal"></a><strong>namespace terminal</strong></h5><p>强制删除ns</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl proxy --port=8081</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get ns postgres-operator -o json &gt; 1.json</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">curl -k -H &quot;Content-Type: application/json&quot; -X PUT --data-binary @1.json http://127.0.0.1:8081/api/v1/namespaces/postgres-operator/finalize</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="PostgreSQL" scheme="https://sreok.github.io/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Kubernetes通过device-plugin调度GPU资源-NVIDIA</title>
    <link href="https://sreok.github.io/2025/02/03/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%E9%80%9A%E8%BF%87device-plugin%E8%B0%83%E5%BA%A6GPU%E8%B5%84%E6%BA%90-NVIDIA/"/>
    <id>https://sreok.github.io/2025/02/03/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%E9%80%9A%E8%BF%87device-plugin%E8%B0%83%E5%BA%A6GPU%E8%B5%84%E6%BA%90-NVIDIA/</id>
    <published>2025-02-03T09:06:03.000Z</published>
    <updated>2025-06-30T08:50:38.811Z</updated>
    
    <content type="html"><![CDATA[<p>NVIDIA官方文档：<a href="https://github.com/NVIDIA/k8s-device-plugin?tab=readme-ov-file#nvidia-device-plugin-for-kubernetes">NVIDIA&#x2F;k8s-device-plugin：用于 Kubernetes 的 NVIDIA 设备插件</a></p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>安装驱动，原文地址：<a href="https://sreok.cn/archives/1723448671609">Linux Kernel 3.10安装NVIDIA 550.107.02驱动GeForce RTX 2080 Ti - Elijah Blog (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/1723448671609">)</a></li></ul><h3 id="安装NVIDIA-Container-Toolkit"><a href="#安装NVIDIA-Container-Toolkit" class="headerlink" title="安装NVIDIA Container Toolkit"></a>安装NVIDIA Container Toolkit</h3><p>官方地址：<a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html">https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | \</span><br><span class="line">  sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo</span><br><span class="line">yum install -y nvidia-container-toolkit</span><br></pre></td></tr></table></figure><h3 id="更新运行时"><a href="#更新运行时" class="headerlink" title="更新运行时"></a>更新运行时</h3><h4 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvidia-ctk runtime configure --runtime=docker</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>无根模式下运行的docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvidia-ctk runtime configure --runtime=docker --config=$HOME/.config/docker/daemon.json</span><br><span class="line">systemctl --user restart docker</span><br><span class="line">nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place</span><br></pre></td></tr></table></figure><h4 id="Containerd"><a href="#Containerd" class="headerlink" title="Containerd"></a>Containerd</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvidia-ctk runtime configure --runtime=containerd</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure><p>仅用于nerdctl无需配置，直接运行<code>nerdctl run --gpus=all</code></p><p>如果以上修改不生效，修改默认运行时</p><blockquote><p># 编辑 <code>/etc/containerd/config.toml</code></p><p>搜索 <code>plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc</code></p><p><code>runtime_type = &quot;io.containerd.runc.v2&quot;</code> 改成 <code>io.containerd.runtime.v1.linux</code></p><p>搜索<code>io.containerd.runtime.v1.linux</code></p><p><code>runtime = &quot;runc&quot;</code>改成<code>runtime = &quot;nvidia-container-runtime&quot;</code></p></blockquote><p><img src="/images/image-mzdz.png"></p><p><img src="/images/image-vhrk.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure><h4 id="CRI-O"><a href="#CRI-O" class="headerlink" title="CRI-O"></a>CRI-O</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvidia-ctk runtime configure --runtime=crio</span><br><span class="line">systemctl restart crio</span><br></pre></td></tr></table></figure><h3 id="部署nvidia-device-plugin"><a href="#部署nvidia-device-plugin" class="headerlink" title="部署nvidia-device-plugin"></a>部署nvidia-device-plugin</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v0.16.2/deployments/static/nvidia-device-plugin.yml</span><br></pre></td></tr></table></figure><h4 id="查看GPU所在节点的pod日志"><a href="#查看GPU所在节点的pod日志" class="headerlink" title="查看GPU所在节点的pod日志"></a>查看GPU所在节点的pod日志</h4><p>正常情况（将GPU注册到kubelet）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">I0820 08:26:47.926058       1 main.go:317] Retrieving plugins.</span><br><span class="line">I0820 08:26:51.674618       1 server.go:216] Starting GRPC server for &#x27;nvidia.com/gpu&#x27;</span><br><span class="line">I0820 08:26:51.682183       1 server.go:147] Starting to serve &#x27;nvidia.com/gpu&#x27; on /var/lib/kubelet/device-plugins/nvidia-gpu.sock</span><br><span class="line">I0820 08:26:51.690851       1 server.go:154] Registered device plugin for &#x27;nvidia.com/gpu&#x27; with Kubelet</span><br></pre></td></tr></table></figure><p>未找到GPU（尝试将nvidia修改为默认运行时）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">I0820 08:26:53.370854       1 main.go:317] Retrieving plugins.</span><br><span class="line">E0820 08:26:53.370997       1 factory.go:87] Incompatible strategy detected auto</span><br><span class="line">E0820 08:26:53.371004       1 factory.go:88] If this is a GPU node, did you configure the NVIDIA Container Toolkit?</span><br><span class="line">E0820 08:26:53.371010       1 factory.go:89] You can check the prerequisites at: https://github.com/NVIDIA/k8s-device-plugin#prerequisites</span><br><span class="line">E0820 08:26:53.371016       1 factory.go:90] You can learn how to set the runtime at: https://github.com/NVIDIA/k8s-device-plugin#quick-start</span><br><span class="line">E0820 08:26:53.371021       1 factory.go:91] If this is not a GPU node, you should set up a toleration or nodeSelector to only deploy this plugin on GPU nodes</span><br><span class="line">I0820 08:26:53.371029       1 main.go:346] No devices found. Waiting indefinitely.</span><br></pre></td></tr></table></figure><p>更新运行时后，重启device-plugin daemonset</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout restart ds -n kube-system nvidia-device-plugin-daemonset</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># gpu节点打标签</span><br><span class="line">kubectl label nodes k8s-dell-r740-worker01 nvidia.com/gpu=true</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gpu-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cuda-container</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nvcr.io/nvidia/k8s/cuda-sample:vectoradd-cuda10.2</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">nvidia.com/gpu:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">command:</span> [<span class="string">&#x27;nvidia-smi&#x27;</span>]</span><br><span class="line">  <span class="attr">tolerations:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">nvidia.com/gpu</span></span><br><span class="line">    <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">    <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">  <span class="comment">#nodeSelector:</span></span><br><span class="line">  <span class="comment">#  viadia.com/gpu: &quot;true&quot;</span></span><br></pre></td></tr></table></figure><h4 id="查看pod日志"><a href="#查看pod日志" class="headerlink" title="查看pod日志"></a>查看pod日志</h4><p><img src="/images/image-ssaz.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;NVIDIA官方文档：&lt;a href=&quot;https://github.com/NVIDIA/k8s-device-plugin?tab=readme-ov-file#nvidia-device-plugin-for-kubernetes&quot;&gt;NVIDIA&amp;#x2F;k8s-d</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="GPU" scheme="https://sreok.github.io/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】K8sGPT + LocalAI 开源自动化诊断工具（GPT4All-j模型）</title>
    <link href="https://sreok.github.io/2024/12/27/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91K8sGPT%20+%20LocalAI%20%E5%BC%80%E6%BA%90%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88GPT4All-j%E6%A8%A1%E5%9E%8B%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/12/27/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91K8sGPT%20+%20LocalAI%20%E5%BC%80%E6%BA%90%E8%87%AA%E5%8A%A8%E5%8C%96%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88GPT4All-j%E6%A8%A1%E5%9E%8B%EF%BC%89/</id>
    <published>2024-12-27T09:06:03.000Z</published>
    <updated>2025-06-30T09:58:05.198Z</updated>
    
    <content type="html"><![CDATA[<p>k8sgpt官方文档：<a href="https://docs.k8sgpt.ai/getting-started/in-cluster-operator/"><em>In-Cluster Operator - k8sgpt</em></a></p><p>localai官方文档：<a href="https://localai.io/basics/kubernetes/"><em>Run with Kubernetes | LocalAI documentation</em></a></p><p>参考文献：<a href="https://itnext.io/k8sgpt-localai-unlock-kubernetes-superpowers-for-free-584790de9b65"><em>K8sGPT + LocalAI: Unlock Kubernetes superpowers for free! | by Tyler | ITNEXT</em></a></p><h3 id="安装LocalAI"><a href="#安装LocalAI" class="headerlink" title="安装LocalAI"></a><strong>安装LocalAI</strong></h3><h4 id="可选一：（kubectl方式）"><a href="#可选一：（kubectl方式）" class="headerlink" title="可选一：（kubectl方式）"></a>可选一：（kubectl方式）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; local-ai.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: local-ai</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: models-pvc</span><br><span class="line">  namespace: local-ai</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: nfs-storage # 实际的storageclass</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: local-ai</span><br><span class="line">  namespace: local-ai</span><br><span class="line">  labels:</span><br><span class="line">    app: local-ai</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: local-ai</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: local-ai</span><br><span class="line">      name: local-ai</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - env:</span><br><span class="line">          - name: DEBUG</span><br><span class="line">            value: &quot;true&quot;</span><br><span class="line">          name: local-ai</span><br><span class="line">          #image: quay.io/go-skynet/local-ai:latest</span><br><span class="line">          image: quay.io/go-skynet/local-ai:master-ffmpeg-core</span><br><span class="line">          imagePullPolicy: IfNotPresent</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: models-volume</span><br><span class="line">              mountPath: /build/models</span><br><span class="line">      volumes:</span><br><span class="line">        - name: models-volume</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: models-pvc</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: local-ai</span><br><span class="line">  namespace: local-ai</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: local-ai</span><br><span class="line">  type: LoadBalancer</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 8080</span><br><span class="line">      targetPort: 8080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f local-ai.yaml</span><br></pre></td></tr></table></figure><h4 id="可选二：（helm方式）"><a href="#可选二：（helm方式）" class="headerlink" title="可选二：（helm方式）"></a>可选二：（helm方式）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">helm repo add go-skynet https://go-skynet.github.io/helm-charts/</span><br><span class="line">helm show values go-skynet/local-ai &gt; values.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim values.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">replicaCount: 1</span><br><span class="line">​</span><br><span class="line">deployment:</span><br><span class="line">  image:</span><br><span class="line">    repository: quay.io/go-skynet/local-ai</span><br><span class="line">    tag: latest    # latest镜像23.5G</span><br><span class="line">    # tag: master-ffmpeg-core</span><br><span class="line">  env:</span><br><span class="line">    threads: 8  # 最好8cpu</span><br><span class="line">    context_size: 512</span><br><span class="line">  modelsPath: &quot;/models&quot;</span><br><span class="line">  download_model:</span><br><span class="line">    image: busybox</span><br><span class="line">  prompt_templates:</span><br><span class="line">    image: busybox</span><br><span class="line">  pullPolicy: IfNotPresent</span><br><span class="line">  imagePullSecrets: []</span><br><span class="line">resources: &#123;&#125;</span><br><span class="line">promptTemplates: &#123;&#125;</span><br><span class="line">models:</span><br><span class="line">  forceDownload: false</span><br><span class="line">  list:</span><br><span class="line">    - url: &quot;https://gpt4all.io/models/ggml-gpt4all-j.bin&quot; # 提前下载，放到models的pvc里</span><br><span class="line">      # basicAuth: base64EncodedCredentials</span><br><span class="line">initContainers: []</span><br><span class="line">sidecarContainers: []</span><br><span class="line">persistence:</span><br><span class="line">  models: </span><br><span class="line">    enabled: true</span><br><span class="line">    annotations: &#123;&#125;</span><br><span class="line">    storageClass: nfs-storage # 实际的storageclassName</span><br><span class="line">    accessModes: ReadWriteMany</span><br><span class="line">    size: 10Gi</span><br><span class="line">    globalMount: /models</span><br><span class="line">  output:</span><br><span class="line">    enabled: true</span><br><span class="line">    annotations: &#123;&#125;</span><br><span class="line">    storageClass: nfs-storage # 实际的storageclassName</span><br><span class="line">    accessModes: ReadWriteMany</span><br><span class="line">    size: 5Gi</span><br><span class="line">    globalMount: /tmp/generated</span><br><span class="line">service:</span><br><span class="line">  type: ClusterIP</span><br><span class="line">  port: 80</span><br><span class="line">  annotations: &#123;&#125;</span><br><span class="line">ingress:</span><br><span class="line">  enabled: false</span><br><span class="line">  className: &quot;&quot;</span><br><span class="line">  annotations: &#123;&#125;</span><br><span class="line">  hosts:</span><br><span class="line">    - host: chart-example.local</span><br><span class="line">      paths:</span><br><span class="line">        - path: /</span><br><span class="line">          pathType: ImplementationSpecific</span><br><span class="line">  tls: []</span><br><span class="line">  #  - secretName: chart-example-tls</span><br><span class="line">  #    hosts:</span><br><span class="line">  #      - chart-example.local</span><br><span class="line">nodeSelector: &#123;&#125;</span><br><span class="line">tolerations: []</span><br><span class="line">affinity: &#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install local-ai go-skynet/local-ai -f values.yaml</span><br></pre></td></tr></table></figure><h3 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a><strong>下载模型</strong></h3><p>GPT4all-j下载地址（3.52G）：<a href="https://gpt4all.io/models/ggml-gpt4all-j.bin"><em>https://gpt4all.io/models/ggml-gpt4all-j.bin</em></a></p><p>下载后安装到models的pvc下</p><h4 id="测试LocalAI-GPT4All模型"><a href="#测试LocalAI-GPT4All模型" class="headerlink" title="测试LocalAI GPT4All模型"></a>测试LocalAI GPT4All模型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.20.13.140:27410/v1/models</span><br></pre></td></tr></table></figure><p><img src="/images/image-vwti.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.20.13.140:27410/v1/chat/completions -H &quot;Content-Type: application/json&quot; -d &#x27;&#123;</span><br><span class="line">  &quot;model&quot;: &quot;ggml-gpt4all-j.bin&quot;,</span><br><span class="line">  &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;How are you?&quot;&#125;],</span><br><span class="line">  &quot;temperature&quot;: 0.7</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="/images/image-xjyf.png"></p><h3 id="安装k8sgpt客户端，诊断集群"><a href="#安装k8sgpt客户端，诊断集群" class="headerlink" title="安装k8sgpt客户端，诊断集群"></a><strong>安装k8sgpt客户端，诊断集群</strong></h3><p>下载地址：<a href="https://docs.k8sgpt.ai/getting-started/installation/"><em>Installation - k8sgpt</em></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh -i k8sgpt_amd64.rpm</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k8sgpt auth add --backend localai --model ggml-gpt4all-j.bin --baseurl http://10.20.13.140:27410/v1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k8sgpt analyze --explain -b localai # 如果这一步卡住，很可能你的资源问题不能被确认</span><br></pre></td></tr></table></figure><p><img src="/images/image-riug.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k8sgpt analyze --explain -b localai --filter Pod # 只过滤Pod</span><br></pre></td></tr></table></figure><p><img src="/images/image-mmzs.png"></p><h4 id="资源使用问题"><a href="#资源使用问题" class="headerlink" title="资源使用问题"></a>资源使用问题</h4><p><img src="/images/image-wvvc.png"></p><p>查看local-ai的pod在node01节点，如果正在运算可以看到top使用率</p><p><img src="/images/image-zuwt.png"></p><h3 id="集成k8sgpt-operator配置自动诊断"><a href="#集成k8sgpt-operator配置自动诊断" class="headerlink" title="集成k8sgpt-operator配置自动诊断"></a><strong>集成k8sgpt-operator配置自动诊断</strong></h3><h3 id="安装k8sgpt-operator"><a href="#安装k8sgpt-operator" class="headerlink" title="安装k8sgpt-operator"></a><strong>安装k8sgpt-operator</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">helm repo add k8sgpt https://charts.k8sgpt.ai/</span><br><span class="line">helm repo update</span><br><span class="line">helm install release k8sgpt/k8sgpt-operator -n k8sgpt-operator-system --create-namespace</span><br></pre></td></tr></table></figure><h3 id="创建K8sGPT"><a href="#创建K8sGPT" class="headerlink" title="创建K8sGPT"></a><strong>创建K8sGPT</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim k8sgpt.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apiVersion: core.k8sgpt.ai/v1alpha1</span><br><span class="line">kind: K8sGPT</span><br><span class="line">metadata:</span><br><span class="line">  name: k8sgpt-local</span><br><span class="line">  namespace: k8sgpt-operator-system</span><br><span class="line">spec:</span><br><span class="line">  ai:</span><br><span class="line">    enabled: true</span><br><span class="line">    backend: localai</span><br><span class="line">    model: ggml-gpt4all-j.bin</span><br><span class="line">    baseUrl: http://local-ai.local-ai.svc.cluster.local:8080/v1</span><br><span class="line">  noCache: false</span><br><span class="line">  version: v0.3.8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f k8sgpt.yaml</span><br></pre></td></tr></table></figure><h4 id="测试自动诊断"><a href="#测试自动诊断" class="headerlink" title="测试自动诊断"></a>测试自动诊断</h4><p>创建一个错误的pod，镜像tag故意写一个不存在的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat &gt; broken-pod.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: broken-pod</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">    - name: broken-pod</span><br><span class="line">      image: nginx:1.a.b.c</span><br><span class="line">      livenessProbe:</span><br><span class="line">        httpGet:</span><br><span class="line">          path: /</span><br><span class="line">          port: 90</span><br><span class="line">        initialDelaySeconds: 3</span><br><span class="line">        periodSeconds: 3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><img src="/images/image-ycna.png"></p><p>查看results</p><p><img src="/images/image-qjeq.png"></p><p>查看详情</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get results -n k8sgpt-operator-system xxxxxxxxx -o json</span><br></pre></td></tr></table></figure><p><img src="/images/image-rdoz.png"></p><p>创建一个没有绑定的svc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create svc clusterip no-endpoint --tcp=80:80</span><br></pre></td></tr></table></figure><p>查看result</p><p><img src="/images/image-nnat.png"></p><p><img src="/images/image-gbbr.png"></p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><p>ai的回答不是统一的，有时候会有弱智回答，这个看主要大模型和机器的资源，如果回答比较模糊，可以删掉results，等待重建后再查看details</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;k8sgpt官方文档：&lt;a href=&quot;https://docs.k8sgpt.ai/getting-started/in-cluster-operator/&quot;&gt;&lt;em&gt;In-Cluster Operator - k8sgpt&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;localai</summary>
      
    
    
    
    
    <category term="localAI" scheme="https://sreok.github.io/tags/localAI/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】istio服务网格进阶-故障注入与请求超时（详解）</title>
    <link href="https://sreok.github.io/2024/12/13/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E8%BF%9B%E9%98%B6-%E6%95%85%E9%9A%9C%E6%B3%A8%E5%85%A5%E4%B8%8E%E8%AF%B7%E6%B1%82%E8%B6%85%E6%97%B6%EF%BC%88%E8%AF%A6%E8%A7%A3%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/12/13/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E8%BF%9B%E9%98%B6-%E6%95%85%E9%9A%9C%E6%B3%A8%E5%85%A5%E4%B8%8E%E8%AF%B7%E6%B1%82%E8%B6%85%E6%97%B6%EF%BC%88%E8%AF%A6%E8%A7%A3%EF%BC%89/</id>
    <published>2024-12-13T09:06:03.000Z</published>
    <updated>2025-06-30T09:46:24.804Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://istio.io/latest/zh/docs/tasks/traffic-management/fault-injection/"><em>Istio &#x2F; 故障注入</em></a>、<a href="https://istio.io/latest/zh/docs/tasks/traffic-management/request-timeouts/"><em>Istio &#x2F; 设置请求超时</em></a></p><p>前提条件：</p><ul><li><p>部署服务（我这里是官方bookinfo程序）</p></li><li><p>服务注入sidecar</p></li></ul><p>部署在这里提到过，原文地址：<a href="https://sreok.cn/archives/1b49e9ee-2a71-4239-913a-fc8913b985b4"><em>istio服务网格入门-灰度发布 - (</em></a><a href="http://sreok.cn/"><em>sreok.cn</em></a><a href="https://sreok.cn/archives/1b49e9ee-2a71-4239-913a-fc8913b985b4"><em>)</em></a></p><h2 id="故障注入"><a href="#故障注入" class="headerlink" title="故障注入"></a><strong>故障注入</strong></h2><h3 id="将请求转发给reviews-v2版本"><a href="#将请求转发给reviews-v2版本" class="headerlink" title="将请求转发给reviews v2版本"></a><strong>将请求转发给reviews v2版本</strong></h3><p>只有这个版本才会调用ratings服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">    - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="设置ratings服务注入延迟"><a href="#设置ratings服务注入延迟" class="headerlink" title="设置ratings服务注入延迟"></a><strong>设置ratings服务注入延迟</strong></h3><p>如果是jason用户的请求，就注入3秒的延迟，比例是100%请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - ratings</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - headers:</span><br><span class="line">        end-user:</span><br><span class="line">          exact: jason</span><br><span class="line">    fault:</span><br><span class="line">      delay:</span><br><span class="line">        fixedDelay: 3s</span><br><span class="line">        percentage:</span><br><span class="line">          value: 100</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: ratings</span><br><span class="line">        subset: v1</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: ratings</span><br><span class="line">        subset: v1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><img src="/images/image-eqtw.png"></p><p>此时请求bookinfo程序，流量被转移到reviews v2版本，没有任何问题</p><p><img src="/images/image-oesh.png"></p><p>当登录用户为jason时，延迟被注入，按照预期，我们引入的3秒延迟不会影响到 <code>reviews</code> 服务，但是因为 <code>reviews</code> 和 <code>ratings</code> 服务间的超时被硬编码为 10 秒。 但是，在 <code>productpage</code> 和 <code>reviews</code> 服务之间也有一个 3 秒的硬编码的超时，再加 1 次重试，一共 6 秒。 结果，<code>productpage</code> 对 <code>reviews</code> 的调用在 6 秒后提前超时并抛出错误了。</p><p>简单来说，productpage在等待reviews，reviews在等待ratings，productpage最多等待3秒就会重试，每次重试都会让reviews 重新请求ratings，所以reviews 与ratings直接的请求<code>必须在3秒内响应</code>，否则就会抛出错误</p><p>可以再次尝试将注入延迟改为2.9秒（只要不超过3秒就会成功，但存在一定误差，这个误差可能时大量请求导致的，我这里是测试，没有其他人的请求，所有可以设置2.9秒）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - ratings</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - headers:</span><br><span class="line">        end-user:</span><br><span class="line">          exact: jason</span><br><span class="line">    fault:</span><br><span class="line">      delay:</span><br><span class="line">        fixedDelay: 2.9s</span><br><span class="line">        percentage:</span><br><span class="line">          value: 100</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: ratings</span><br><span class="line">        subset: v1</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: ratings</span><br><span class="line">        subset: v1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><img src="/images/image-qdhw.png"></p><p>这是实际上是官方提供给我们测试的BUG，reviews v3修复了这BUG，将ratings的超时时间设置为2.5秒</p><h3 id="更新reviews"><a href="#更新reviews" class="headerlink" title="更新reviews"></a><strong>更新reviews</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">    - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>此时将流量转发给reviews v3版本，ratings响应时间只要超过2.5秒，reviews就不会继续等待，立即返回给productpage，避免ratings故障影响reviews服务</p><p>延迟如果在2.5秒内，响应没问题，超过2.5秒，抛出异常</p><p>这个时候ratings服务还是设置3s延迟，模拟ratings故障导致无法响应reviews服务，reviews服务也会在2.5秒后，将响应返回给productpage服务，不会影响reviews服务。</p><p><img src="/images/image-dqov.png"></p><h2 id="请求超时"><a href="#请求超时" class="headerlink" title="请求超时"></a><strong>请求超时</strong></h2><p>保留ratings 服务的延迟注入，我设置了3秒，这时设置reviews超时时间</p><h3 id="设置reviews-超时时间"><a href="#设置reviews-超时时间" class="headerlink" title="设置reviews 超时时间"></a><strong>设置reviews 超时时间</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v3</span><br><span class="line">    timeout: 1s</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>过程：</p><p>=&gt; productpage v1（硬编码3s超时，1次重试）</p><p>=&gt; reviews v3（硬编码2.5s超时，设置超时1s，此时会提前超时）</p><p>=&gt; ratings v1（设置延时3s响应，延时只要大于等于超时就会响应失败）</p><p>解析：</p><ol><li><p>productpage请求reviews服务，reviews请求ratings服务，ratings服务延时3s响应</p></li><li><p>1秒后reviews服务超时，因为reviews还在等待reviews响应，而ratings要3s后才会响应</p></li><li><p>productpage因为硬编码会再次重试，还是以上步骤，1秒后reviews服务再次返回超时</p></li><li><p>productpage发送两次请求，共等待了2秒后返回给客户端，并且此时reviews是不可用的</p></li></ol><p>注意：</p><p>productpage硬编码的3s超时没有触发，是因为reviews返回了超时</p><p>reviews硬编码2.5s超时没有触发，是因为设置了超时时间（作用就是这个）</p><p>结果：</p><p>2秒后抛出错误：<code>Sorry, product reviews are currently unavailable for this book.</code></p><p><img src="/images/image-rofb.png"></p><p>原因：</p><p>reviews服务1秒内没有收到ratings服务的响应，reviews服务超时</p><p>这个能解决什么问题？</p><p>在故障注入时，我们发现一个bug，就是调用链的下游超时时间大于上游，此时站在架构层解决的方式就可以使用timeout来拦截流量使下游小于上游的超时时间。避免影响中间层服务。</p><p>注意：</p><ol><li><p>超时时间只能设置小于硬编码的超时时间</p></li><li><p>如遇到上面的bug问题，应及时提交并协助修复，高耦合istio并不是最佳方案</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;官方文档：&lt;a href=&quot;https://istio.io/latest/zh/docs/tasks/traffic-management/fault-injection/&quot;&gt;&lt;em&gt;Istio &amp;#x2F; 故障注入&lt;/em&gt;&lt;/a&gt;、&lt;a href=&quot;https://</summary>
      
    
    
    
    
    <category term="istio" scheme="https://sreok.github.io/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】istio服务网格入门-灰度发布</title>
    <link href="https://sreok.github.io/2024/12/11/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%85%A5%E9%97%A8-%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/"/>
    <id>https://sreok.github.io/2024/12/11/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%85%A5%E9%97%A8-%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/</id>
    <published>2024-12-11T09:06:03.000Z</published>
    <updated>2025-06-30T09:46:10.941Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://istio.io/latest/zh/docs/tasks/traffic-management/traffic-shifting/"><em>Istio &#x2F; 流量转移</em></a></p><p>前提条件：</p><ul><li>微服务使用deployment+service部署到集群</li></ul><h3 id="1、配置命名空间自动注入sidecar"><a href="#1、配置命名空间自动注入sidecar" class="headerlink" title="1、配置命名空间自动注入sidecar"></a><strong>1、配置命名空间自动注入sidecar</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl label namespace default istio-injection=enabled</span><br></pre></td></tr></table></figure><p>我这里使用istio官方提供的bookinfo程序演示</p><h3 id="2、部署bookinfo示例程序"><a href="#2、部署bookinfo示例程序" class="headerlink" title="2、部署bookinfo示例程序"></a><strong>2、部署bookinfo示例程序</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; bookinfo.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: details</span><br><span class="line">  labels:</span><br><span class="line">    app: details</span><br><span class="line">    service: details</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9080</span><br><span class="line">    name: http</span><br><span class="line">  selector:</span><br><span class="line">    app: details</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-details</span><br><span class="line">  labels:</span><br><span class="line">    account: details</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: details-v1</span><br><span class="line">  labels:</span><br><span class="line">    app: details</span><br><span class="line">    version: v1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: details</span><br><span class="line">      version: v1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: details</span><br><span class="line">        version: v1</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: bookinfo-details</span><br><span class="line">      containers:</span><br><span class="line">      - name: details</span><br><span class="line">        image: docker.io/istio/examples-bookinfo-details-v1:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9080</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings</span><br><span class="line">  labels:</span><br><span class="line">    app: ratings</span><br><span class="line">    service: ratings</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9080</span><br><span class="line">    name: http</span><br><span class="line">  selector:</span><br><span class="line">    app: ratings</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-ratings</span><br><span class="line">  labels:</span><br><span class="line">    account: ratings</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings-v1</span><br><span class="line">  labels:</span><br><span class="line">    app: ratings</span><br><span class="line">    version: v1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ratings</span><br><span class="line">      version: v1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ratings</span><br><span class="line">        version: v1</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: bookinfo-ratings</span><br><span class="line">      containers:</span><br><span class="line">      - name: ratings</span><br><span class="line">        image: docker.io/istio/examples-bookinfo-ratings-v1:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9080</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">  labels:</span><br><span class="line">    app: reviews</span><br><span class="line">    service: reviews</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9080</span><br><span class="line">    name: http</span><br><span class="line">  selector:</span><br><span class="line">    app: reviews</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-reviews</span><br><span class="line">  labels:</span><br><span class="line">    account: reviews</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews-v1</span><br><span class="line">  labels:</span><br><span class="line">    app: reviews</span><br><span class="line">    version: v1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: reviews</span><br><span class="line">      version: v1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: reviews</span><br><span class="line">        version: v1</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: bookinfo-reviews</span><br><span class="line">      containers:</span><br><span class="line">      - name: reviews</span><br><span class="line">        image: docker.io/istio/examples-bookinfo-reviews-v1:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        env:</span><br><span class="line">        - name: LOG_DIR</span><br><span class="line">          value: &quot;/tmp/logs&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9080</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: tmp</span><br><span class="line">          mountPath: /tmp</span><br><span class="line">        - name: wlp-output</span><br><span class="line">          mountPath: /opt/ibm/wlp/output</span><br><span class="line">      volumes:</span><br><span class="line">      - name: wlp-output</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      - name: tmp</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews-v2</span><br><span class="line">  labels:</span><br><span class="line">    app: reviews</span><br><span class="line">    version: v2</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: reviews</span><br><span class="line">      version: v2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: reviews</span><br><span class="line">        version: v2</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: bookinfo-reviews</span><br><span class="line">      containers:</span><br><span class="line">      - name: reviews</span><br><span class="line">        image: docker.io/istio/examples-bookinfo-reviews-v2:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        env:</span><br><span class="line">        - name: LOG_DIR</span><br><span class="line">          value: &quot;/tmp/logs&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9080</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: tmp</span><br><span class="line">          mountPath: /tmp</span><br><span class="line">        - name: wlp-output</span><br><span class="line">          mountPath: /opt/ibm/wlp/output</span><br><span class="line">      volumes:</span><br><span class="line">      - name: wlp-output</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      - name: tmp</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews-v3</span><br><span class="line">  labels:</span><br><span class="line">    app: reviews</span><br><span class="line">    version: v3</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: reviews</span><br><span class="line">      version: v3</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: reviews</span><br><span class="line">        version: v3</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: bookinfo-reviews</span><br><span class="line">      containers:</span><br><span class="line">      - name: reviews</span><br><span class="line">        image: docker.io/istio/examples-bookinfo-reviews-v3:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        env:</span><br><span class="line">        - name: LOG_DIR</span><br><span class="line">          value: &quot;/tmp/logs&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9080</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: tmp</span><br><span class="line">          mountPath: /tmp</span><br><span class="line">        - name: wlp-output</span><br><span class="line">          mountPath: /opt/ibm/wlp/output</span><br><span class="line">      volumes:</span><br><span class="line">      - name: wlp-output</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      - name: tmp</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: productpage</span><br><span class="line">  labels:</span><br><span class="line">    app: productpage</span><br><span class="line">    service: productpage</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9080</span><br><span class="line">    name: http</span><br><span class="line">  selector:</span><br><span class="line">    app: productpage</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-productpage</span><br><span class="line">  labels:</span><br><span class="line">    account: productpage</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: productpage-v1</span><br><span class="line">  labels:</span><br><span class="line">    app: productpage</span><br><span class="line">    version: v1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: productpage</span><br><span class="line">      version: v1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      annotations:</span><br><span class="line">        prometheus.io/scrape: &quot;true&quot;</span><br><span class="line">        prometheus.io/port: &quot;9080&quot;</span><br><span class="line">        prometheus.io/path: &quot;/metrics&quot;</span><br><span class="line">      labels:</span><br><span class="line">        app: productpage</span><br><span class="line">        version: v1</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: bookinfo-productpage</span><br><span class="line">      containers:</span><br><span class="line">      - name: productpage</span><br><span class="line">        image: docker.io/istio/examples-bookinfo-productpage-v1:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9080</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: tmp</span><br><span class="line">          mountPath: /tmp</span><br><span class="line">      volumes:</span><br><span class="line">      - name: tmp</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f bookinfo.yaml</span><br></pre></td></tr></table></figure><p><img src="/images/image-jxrm.png"></p><p>所有pod运行时2&#x2F;2即为部署成功，sidecar也以容器形式注入到pod内。</p><h3 id="3、部署网关"><a href="#3、部署网关" class="headerlink" title="3、部署网关"></a><strong>3、部署网关</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; bookinfo-gateway.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-gateway</span><br><span class="line">spec:</span><br><span class="line">  # The selector matches the ingress gateway pod labels.</span><br><span class="line">  # If you installed Istio using Helm following the standard documentation, this would be &quot;istio=ingress&quot;</span><br><span class="line">  selector:</span><br><span class="line">    istio: ingressgateway # use istio default controller</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 8080</span><br><span class="line">      name: http</span><br><span class="line">      protocol: HTTP</span><br><span class="line">    hosts:</span><br><span class="line">    # 允许所有域名通过gateway</span><br><span class="line">    - &quot;*&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f bookinfo-gateway.yaml</span><br></pre></td></tr></table></figure><h3 id="4、部署前端virtual-service"><a href="#4、部署前端virtual-service" class="headerlink" title="4、部署前端virtual service"></a><strong>4、部署前端virtual service</strong></h3><p>这里的前端指的时发送请求的服务，可以是中间件也可以是后端的接口，我这里使用<code>productpage</code>服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; virtual-service-productpage.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  # 访问时服务使用的域名，*表示允许所有访问</span><br><span class="line">  - &quot;*&quot;</span><br><span class="line">  # 外部访问时需要指定gateways，选择入口网关</span><br><span class="line">  gateways:</span><br><span class="line">  - bookinfo-gateway</span><br><span class="line">  http:</span><br><span class="line">  # 匹配规则</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        # uri 完全 匹配时走下面路由</span><br><span class="line">        exact: /productpage</span><br><span class="line">    - uri:</span><br><span class="line">        # uri 前缀 匹配时走下面路由</span><br><span class="line">        prefix: /static</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /login</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /logout</span><br><span class="line">    - uri:</span><br><span class="line">        prefix: /api/v1/products</span><br><span class="line">    route:</span><br><span class="line">    # 目标路由</span><br><span class="line">    - destination:</span><br><span class="line">        # service名称</span><br><span class="line">        host: productpage</span><br><span class="line">        # service端口</span><br><span class="line">        port:</span><br><span class="line">          number: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f virtual-service-productpage.yaml</span><br></pre></td></tr></table></figure><h3 id="5、访问"><a href="#5、访问" class="headerlink" title="5、访问"></a><strong>5、访问</strong></h3><p><img src="/images/image-wfga.png"></p><p>通过istio-ingress服务的外部IP访问<code>http://10.20.12.190/productpage</code>，如果没有部署MetalLB可以使用nodeIP+30271（istio-ingress服务80端口的映射端口）访问<code>http://10.20.12.10:30271/productpage</code></p><p><img src="/images/image-fokw.png"></p><p>访问后刷新页面，发现reviews服务时每次刷新都会请求不同的版本，这是因为后端服务还没有被纳管，此时的请求是通过<code>productpage</code>请求reviews服务的service返回的</p><h3 id="6、创建目标规则"><a href="#6、创建目标规则" class="headerlink" title="6、创建目标规则"></a><strong>6、创建目标规则</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; destination-rule-all.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: productpage</span><br><span class="line">spec:</span><br><span class="line">  host: productpage</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  host: reviews</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">  - name: v2</span><br><span class="line">    labels:</span><br><span class="line">      version: v2</span><br><span class="line">  - name: v3</span><br><span class="line">    labels:</span><br><span class="line">      version: v3</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings</span><br><span class="line">spec:</span><br><span class="line">  host: ratings</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">  - name: v2</span><br><span class="line">    labels:</span><br><span class="line">      version: v2</span><br><span class="line">  - name: v2-mysql</span><br><span class="line">    labels:</span><br><span class="line">      version: v2-mysql</span><br><span class="line">  - name: v2-mysql-vm</span><br><span class="line">    labels:</span><br><span class="line">      version: v2-mysql-vm</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: details</span><br><span class="line">spec:</span><br><span class="line">  host: details</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">  - name: v2</span><br><span class="line">    labels:</span><br><span class="line">      version: v2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f destination-rule-all.yaml</span><br></pre></td></tr></table></figure><p>此时将所有服务都设置了规则，按照pod label为version 的识别出来，这一步并不会对请求发生变化，这是为了方便后面调整变化时使用的。</p><h3 id="7、创建后端virtual-service"><a href="#7、创建后端virtual-service" class="headerlink" title="7、创建后端virtual service"></a><strong>7、创建后端virtual service</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; virtual-service-all-v1.yaml &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: productpage</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - productpage</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: productpage</span><br><span class="line">        subset: v1</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v1</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: ratings</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - ratings</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: ratings</span><br><span class="line">        subset: v1</span><br><span class="line">---</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: details</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - details</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: details</span><br><span class="line">        subset: v1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f virtual-service-all-v1.yaml</span><br></pre></td></tr></table></figure><p>此时后端服务都被istio纳管，并将路由目标指向v1版本，现在不管怎么请求，reviews服务都是v1版本</p><p><img src="/images/image-nqyu.png"></p><h3 id="8、灰度发布"><a href="#8、灰度发布" class="headerlink" title="8、灰度发布"></a><strong>8、灰度发布</strong></h3><p>之前的操作都是为了能模拟一个正常使用的业务，并将服务通过istio的virtual service管理，接下来才是灰度发布的操作</p><p>要升级Review服务从v1到v2版本，首先部署这个deployment，这个demo中已经部署了，并且之前访问时也看到了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; virtual-service-reviews.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: reviews</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">    - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v1</span><br><span class="line">      weight: 80</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v2</span><br><span class="line">      weight: 20</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f virtual-service-reviews.yaml</span><br></pre></td></tr></table></figure><p>再次刷新页面模拟请求，发现80%的流量在v1，20%流量分配到v2</p><p>在kiali中也可以看到流量分配情况</p><p><img src="/images/image-scse.png"></p><p>运行一段时间再次调整v2流量的比例直到100%流量到v2，这时可以下线v1版本。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;官方文档：&lt;a href=&quot;https://istio.io/latest/zh/docs/tasks/traffic-management/traffic-shifting/&quot;&gt;&lt;em&gt;Istio &amp;#x2F; 流量转移&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前提条件：&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="istio" scheme="https://sreok.github.io/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】istio服务网格入门-流量熔断</title>
    <link href="https://sreok.github.io/2024/12/10/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%85%A5%E9%97%A8-%E6%B5%81%E9%87%8F%E7%86%94%E6%96%AD/"/>
    <id>https://sreok.github.io/2024/12/10/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%85%A5%E9%97%A8-%E6%B5%81%E9%87%8F%E7%86%94%E6%96%AD/</id>
    <published>2024-12-10T09:06:03.000Z</published>
    <updated>2025-06-30T09:45:38.411Z</updated>
    
    <content type="html"><![CDATA[<p>前提条件：</p><ul><li>部署服务（deployment、service）并注入sidecar</li></ul><p>我这里还是使用官方提供的bookinfo程序，选择productpage作为熔断目标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt; EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: productpage</span><br><span class="line">spec:</span><br><span class="line">  host: productpage</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><blockquote><p>在之前的文档中，设置了目标路由的subset，使virtual service能够识别版本，本文中流量熔断是基于目标路由配置的设置。</p></blockquote><h3 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a><strong>测试工具</strong></h3><p>这是一个名为 <a href="https://github.com/istio/fortio"><em>Fortio</em></a> 的负载测试客户端， 它可以控制连接数、并发数及发送 HTTP 请求的延迟。 通过 Fortio 能够有效的触发前面在 <code>DestinationRule</code> 中设置的熔断策略</p><p><code>注意：Fortio也需要注入sidecar</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: fortio</span><br><span class="line">  labels:</span><br><span class="line">    app: fortio</span><br><span class="line">    service: fortio</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 8080</span><br><span class="line">    name: http</span><br><span class="line">  selector:</span><br><span class="line">    app: fortio</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: fortio-deploy</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: fortio</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      annotations:</span><br><span class="line">        # This annotation causes Envoy to serve cluster.outbound statistics via 15000/stats</span><br><span class="line">        # in addition to the stats normally served by Istio. The Circuit Breaking example task</span><br><span class="line">        # gives an example of inspecting Envoy stats via proxy config.</span><br><span class="line">        proxy.istio.io/config: |-</span><br><span class="line">          proxyStatsMatcher:</span><br><span class="line">            inclusionPrefixes:</span><br><span class="line">            - &quot;cluster.outbound&quot;</span><br><span class="line">            - &quot;cluster_manager&quot;</span><br><span class="line">            - &quot;listener_manager&quot;</span><br><span class="line">            - &quot;server&quot;</span><br><span class="line">            - &quot;cluster.xds-grpc&quot;</span><br><span class="line">      labels:</span><br><span class="line">        app: fortio</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: fortio</span><br><span class="line">        image: fortio/fortio:latest_release</span><br><span class="line">        imagePullPolicy: Always</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          name: http-fortio</span><br><span class="line">        - containerPort: 8079</span><br><span class="line">          name: grpc-ping</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="测试并发数"><a href="#测试并发数" class="headerlink" title="测试并发数"></a><strong>测试并发数</strong></h3><ol><li><p>获取Fortio pod名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export FORTIO_POD=$(kubectl get pods -l app=fortio -o &#x27;jsonpath=&#123;.items[0].metadata.name&#125;&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>测试并发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec &quot;$FORTIO_POD&quot; -c fortio -- /usr/bin/fortio load -c 10 -qps 0 -n 1 -loglevel Warning http://productpage:9080/productpage</span><br></pre></td></tr></table></figure><blockquote><p>-c ： 每次连接的并发连接数</p><p>-n ： 发送连接次数</p></blockquote><p><img src="/images/image-mdhb.png"></p></li></ol><h3 id="配置Destination-Rule"><a href="#配置Destination-Rule" class="headerlink" title="配置Destination Rule"></a><strong>配置Destination Rule</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: productpage</span><br><span class="line">spec:</span><br><span class="line">  host: productpage</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">  # 以下是新增的流量策略</span><br><span class="line">  trafficPolicy:</span><br><span class="line">    # 设置连接池</span><br><span class="line">    connectionPool:</span><br><span class="line">      tcp:</span><br><span class="line">        # tcp最大链接数为1</span><br><span class="line">        maxConnections: 1</span><br><span class="line">      http:</span><br><span class="line">        # http最大等待请求数为1</span><br><span class="line">        http1MaxPendingRequests: 1</span><br><span class="line">        # 每个连接的最大请求数为1</span><br><span class="line">        maxRequestsPerConnection: 1</span><br><span class="line">    # 异常检测，用于自动检测并排除异常的服务实例</span><br><span class="line">    outlierDetection:</span><br><span class="line">      # 连续的 5xx 错误计数，当达到这个阈值时，实例会被标记为异常</span><br><span class="line">      consecutive5xxErrors: 1</span><br><span class="line">      # 检测的时间窗口，这里是每秒检测一次</span><br><span class="line">      interval: 1s</span><br><span class="line">      # 基础排除时间，当实例被标记为异常后，它会在这段时间内被排除，这里是 3 分钟</span><br><span class="line">      baseEjectionTime: 3m</span><br><span class="line">      # 允许被排除的最大实例百分比，这里是 100%，意味着所有实例都可能被排除</span><br><span class="line">      maxEjectionPercent: 100</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="再次测试"><a href="#再次测试" class="headerlink" title="再次测试"></a><strong>再次测试</strong></h3><ol><li><p>获取Fortio pod名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export FORTIO_POD=$(kubectl get pods -l app=fortio -o &#x27;jsonpath=&#123;.items[0].metadata.name&#125;&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>测试并发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec &quot;$FORTIO_POD&quot; -c fortio -- /usr/bin/fortio load -c 10 -qps 0 -n 1 -loglevel Warning http://productpage:9080/productpage</span><br></pre></td></tr></table></figure></li></ol><p><img src="/images/image-ugvn.png"></p><p><img src="/images/image-eonx.png"></p><blockquote><p>istio-proxy 允许存在一些误差，所以偶尔会出现拦截9个请求偶尔拦截8个请求，这与各种因素有关，只需要关心大概范围即可。</p></blockquote><h4 id="查看详细熔断日志"><a href="#查看详细熔断日志" class="headerlink" title="查看详细熔断日志"></a>查看详细熔断日志</h4><p>多次并发测试后可以通过日志了解更多熔断详情</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec &quot;$FORTIO_POD&quot; -c istio-proxy -- pilot-agent request GET stats | grep productpage | grep pending</span><br></pre></td></tr></table></figure><p><img src="/images/image-mzti.png"></p><blockquote><p>其中110个被请求标记为熔断，20个请求通过</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前提条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部署服务（deployment、service）并注入sidecar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我这里还是使用官方提供的bookinfo程序，选择productpage作为熔断目标&lt;/p&gt;
&lt;figure class=&quot;highlig</summary>
      
    
    
    
    
    <category term="istio" scheme="https://sreok.github.io/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】istio服务网格入门-流量镜像</title>
    <link href="https://sreok.github.io/2024/12/08/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%85%A5%E9%97%A8-%E6%B5%81%E9%87%8F%E9%95%9C%E5%83%8F/"/>
    <id>https://sreok.github.io/2024/12/08/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%85%A5%E9%97%A8-%E6%B5%81%E9%87%8F%E9%95%9C%E5%83%8F/</id>
    <published>2024-12-08T09:06:03.000Z</published>
    <updated>2025-06-30T09:45:57.471Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://istio.io/latest/zh/docs/tasks/traffic-management/mirroring/"><em>Istio &#x2F; 镜像</em></a></p><h3 id="启动httpbin服务（演示服务）"><a href="#启动httpbin服务（演示服务）" class="headerlink" title="启动httpbin服务（演示服务）"></a><strong>启动httpbin服务（演示服务）</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># v1版本</span><br><span class="line">cat &lt;&lt;EOF | istioctl kube-inject -f - | kubectl create -f -</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-v1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: httpbin</span><br><span class="line">      version: v1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: httpbin</span><br><span class="line">        version: v1</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: docker.io/kennethreitz/httpbin</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: httpbin</span><br><span class="line">        command: [&quot;gunicorn&quot;, &quot;--access-logfile&quot;, &quot;-&quot;, &quot;-b&quot;, &quot;0.0.0.0:80&quot;, &quot;httpbin:app&quot;]</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># v2版本</span><br><span class="line">cat &lt;&lt;EOF | istioctl kube-inject -f - | kubectl create -f -</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-v2</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: httpbin</span><br><span class="line">      version: v2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: httpbin</span><br><span class="line">        version: v2</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: docker.io/kennethreitz/httpbin</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: httpbin</span><br><span class="line">        command: [&quot;gunicorn&quot;, &quot;--access-logfile&quot;, &quot;-&quot;, &quot;-b&quot;, &quot;0.0.0.0:80&quot;, &quot;httpbin:app&quot;]</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a><strong>创建服务</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">  labels:</span><br><span class="line">    app: httpbin</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 8000</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: httpbin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建网关"><a href="#创建网关" class="headerlink" title="创建网关"></a><strong>创建网关</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: Gateway</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin-gw</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: httpbin</span><br><span class="line">  servers:</span><br><span class="line">  - port:</span><br><span class="line">      number: 80</span><br><span class="line">      name: http</span><br><span class="line">      protocol: HTTP</span><br><span class="line">    hosts:</span><br><span class="line">    - &quot;*&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建目标规则"><a href="#创建目标规则" class="headerlink" title="创建目标规则"></a><strong>创建目标规则</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  host: httpbin</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1</span><br><span class="line">    labels:</span><br><span class="line">      version: v1</span><br><span class="line">  - name: v2</span><br><span class="line">    labels:</span><br><span class="line">      version: v2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="创建虚拟服务"><a href="#创建虚拟服务" class="headerlink" title="创建虚拟服务"></a><strong>创建虚拟服务</strong></h3><p>将流量全部转发到v1版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  gateways:</span><br><span class="line">  - bookinfo-gateway</span><br><span class="line">  hosts:</span><br><span class="line">  - &quot;*&quot;</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /headers</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: httpbin</span><br><span class="line">        subset: v1</span><br><span class="line">      weight: 100</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h4><p><img src="/images/image-tjnh.png"></p><h3 id="流量镜像"><a href="#流量镜像" class="headerlink" title="流量镜像"></a><strong>流量镜像</strong></h3><p>将转发到v1的流量克隆一份到v2版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f - &lt;&lt;EOF</span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: httpbin</span><br><span class="line">spec:</span><br><span class="line">  gateways:</span><br><span class="line">  - bookinfo-gateway</span><br><span class="line">  hosts:</span><br><span class="line">  - &quot;*&quot;</span><br><span class="line">  http:</span><br><span class="line">  - match:</span><br><span class="line">    - uri:</span><br><span class="line">        exact: /headers</span><br><span class="line">    route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: httpbin</span><br><span class="line">        subset: v1</span><br><span class="line">      weight: 100</span><br><span class="line">    mirror:</span><br><span class="line">      # 镜像目标</span><br><span class="line">      host: httpbin</span><br><span class="line">      subset: v2</span><br><span class="line">    # 镜像比例100%</span><br><span class="line">    mirrorPercentage:</span><br><span class="line">      value: 100.0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="再次访问"><a href="#再次访问" class="headerlink" title="再次访问"></a>再次访问</h4><p><img src="/images/image-hvnz.png"></p><blockquote><p>重点注意这些被镜像的流量是『即发即弃』的，就是说镜像请求的响应会被丢弃，服务响应还是v1版本的</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;官方文档：&lt;a href=&quot;https://istio.io/latest/zh/docs/tasks/traffic-management/mirroring/&quot;&gt;&lt;em&gt;Istio &amp;#x2F; 镜像&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;启动httpbin服务（演</summary>
      
    
    
    
    
    <category term="istio" scheme="https://sreok.github.io/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Kubernetes部署Zookeeper v3.9 + Kafka v3.7.0 集群 （manifest方式）</title>
    <link href="https://sreok.github.io/2024/09/02/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%E9%83%A8%E7%BD%B2Zookeeper%20v3.9%20+%20Kafka%20v3.7.0%20%E9%9B%86%E7%BE%A4%20%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/09/02/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%E9%83%A8%E7%BD%B2Zookeeper%20v3.9%20+%20Kafka%20v3.7.0%20%E9%9B%86%E7%BE%A4%20%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2024-09-02T09:06:03.000Z</published>
    <updated>2025-06-30T08:47:54.894Z</updated>
    
    <content type="html"><![CDATA[<h3 id="部署zookeeper（三节点）"><a href="#部署zookeeper（三节点）" class="headerlink" title="部署zookeeper（三节点）"></a>部署zookeeper（三节点）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: zookeeper-headless</span><br><span class="line">  namespace: kafka</span><br><span class="line">  labels:</span><br><span class="line">    app: zookeeper</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 2181</span><br><span class="line">      name: client</span><br><span class="line">    - port: 2888</span><br><span class="line">      name: fllower</span><br><span class="line">    - port: 3888</span><br><span class="line">      name: election</span><br><span class="line">  clusterIP: None</span><br><span class="line">  selector:</span><br><span class="line">    app: zookeeper</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: zookeeper-adminserver</span><br><span class="line">  namespace: kafka</span><br><span class="line">  labels:</span><br><span class="line">    app: zookeeper</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8080</span><br><span class="line">      name: adminserver</span><br><span class="line">      nodePort: 31801</span><br><span class="line">  selector:</span><br><span class="line">    app: zookeeper</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: zookeeper-config</span><br><span class="line">  namespace: kafka</span><br><span class="line">  labels:</span><br><span class="line">    app: zookeeper</span><br><span class="line">data:</span><br><span class="line">  zoo.cfg: |+</span><br><span class="line">    tickTime=2000</span><br><span class="line">    initLimit=10</span><br><span class="line">    syncLimit=5</span><br><span class="line">    dataDir=/data</span><br><span class="line">    dataLogDir=/datalog</span><br><span class="line">    clientPort=2181</span><br><span class="line">    server.1=zookeeper-0.zookeeper-headless.kafka.svc.cluster.local:2888:3888</span><br><span class="line">    server.2=zookeeper-1.zookeeper-headless.kafka.svc.cluster.local:2888:3888</span><br><span class="line">    server.3=zookeeper-2.zookeeper-headless.kafka.svc.cluster.local:2888:3888</span><br><span class="line">    4lw.commands.whitelist=*</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: zookeeper</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  serviceName: &quot;zookeeper-headless&quot;</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: zookeeper</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: zookeeper</span><br><span class="line">    spec:</span><br><span class="line">      initContainers:</span><br><span class="line">      - name: set-id</span><br><span class="line">        # 源镜像地址：busybox:latest</span><br><span class="line">        image: harbor.basepoint.net/library/busybox:latest</span><br><span class="line">        command: [&#x27;sh&#x27;, &#x27;-c&#x27;, &quot;hostname | cut -d &#x27;-&#x27; -f 2 | awk &#x27;&#123;print $0 + 1&#125;&#x27; &gt; /data/myid&quot;]</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: data</span><br><span class="line">          mountPath: /data</span><br><span class="line">      containers:</span><br><span class="line">      - name: zookeeper</span><br><span class="line">        # 源镜像地址：zookeeper:3.9</span><br><span class="line">        image: harbor.basepoint.net/library/zookeeper:3.9</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            memory: &quot;500Mi&quot;</span><br><span class="line">            cpu: &quot;500m&quot;</span><br><span class="line">          limits:</span><br><span class="line">            memory: &quot;1000Mi&quot;</span><br><span class="line">            cpu: &quot;1000m&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 2181</span><br><span class="line">          name: client</span><br><span class="line">        - containerPort: 2888</span><br><span class="line">          name: fllower</span><br><span class="line">        - containerPort: 3888</span><br><span class="line">          name: election</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: zook-config</span><br><span class="line">            mountPath: /conf/zoo.cfg</span><br><span class="line">            subPath: zoo.cfg</span><br><span class="line">          - name: data</span><br><span class="line">            mountPath: /data</span><br><span class="line">        env:</span><br><span class="line">        - name: MY_POD_NAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.name</span><br><span class="line">      volumes:</span><br><span class="line">      - name: zook-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: zookeeper-config</span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">    - metadata:</span><br><span class="line">        name: data</span><br><span class="line">      spec:</span><br><span class="line">        accessModes: [&quot;ReadWriteMany&quot;]</span><br><span class="line">        storageClassName: longhorn</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 10Gi</span><br></pre></td></tr></table></figure><h3 id="部署Kafka（三节点）"><a href="#部署Kafka（三节点）" class="headerlink" title="部署Kafka（三节点）"></a>部署Kafka（三节点）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-headless</span><br><span class="line">  namespace: kafka</span><br><span class="line">  labels:</span><br><span class="line">    app: kafka</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 9092</span><br><span class="line">      name: server</span><br><span class="line">  clusterIP: None</span><br><span class="line">  selector:</span><br><span class="line">    app: kafka</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: kafka</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 9092</span><br><span class="line">      targetPort: 9092</span><br><span class="line">      nodePort: 30092</span><br><span class="line">      name: bootstrap</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  serviceName: &quot;kafka-headless&quot;</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: kafka</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: kafka</span><br><span class="line">    spec:</span><br><span class="line">      affinity:</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">          - weight: 1</span><br><span class="line">            podAffinityTerm:</span><br><span class="line">              labelSelector:</span><br><span class="line">                matchExpressions:</span><br><span class="line">                  - key: &quot;app&quot;</span><br><span class="line">                    operator: In</span><br><span class="line">                    values:</span><br><span class="line">                      - kafka</span><br><span class="line">              topologyKey: &quot;kubernetes.io/hostname&quot;</span><br><span class="line">      securityContext:</span><br><span class="line">        runAsUser: 0</span><br><span class="line">      containers:</span><br><span class="line">      - name: kafka</span><br><span class="line">        # 源镜像地址：apache/kafka:3.7.0</span><br><span class="line">        image: harbor.basepoint.net/library/kafka:3.7.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            memory: &quot;500Mi&quot;</span><br><span class="line">            cpu: &quot;500m&quot;</span><br><span class="line">          limits:</span><br><span class="line">            memory: &quot;1000Mi&quot;</span><br><span class="line">            cpu: &quot;2000m&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9092</span><br><span class="line">          name: server</span><br><span class="line">        #env:</span><br><span class="line">        #  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.25.2.4:30092</span><br><span class="line">        #  --override advertised.listeners=PLAINTEXT://172.25.2.4:30092 \</span><br><span class="line">        command:</span><br><span class="line">        - sh</span><br><span class="line">        - -c</span><br><span class="line">        - &quot;exec /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties --override broker.id=$&#123;HOSTNAME##*-&#125; \</span><br><span class="line">          --override listeners=PLAINTEXT://:9092 \</span><br><span class="line">          --override zookeeper.connect=zookeeper-0.zookeeper-headless:2181,zookeeper-1.zookeeper-headless:2181,zookeeper-2.zookeeper-headless:2181 \</span><br><span class="line">          --override log.dirs=/var/lib/kafka/data/logs \</span><br><span class="line">          --override auto.create.topics.enable=true \</span><br><span class="line">          --override auto.leader.rebalance.enable=true \</span><br><span class="line">          --override background.threads=10 \</span><br><span class="line">          --override compression.type=producer \</span><br><span class="line">          --override delete.topic.enable=true \</span><br><span class="line">          --override leader.imbalance.check.interval.seconds=300 \</span><br><span class="line">          --override leader.imbalance.per.broker.percentage=10 \</span><br><span class="line">          --override log.flush.interval.messages=9223372036854775807 \</span><br><span class="line">          --override log.flush.offset.checkpoint.interval.ms=60000 \</span><br><span class="line">          --override log.flush.scheduler.interval.ms=9223372036854775807 \</span><br><span class="line">          --override log.retention.bytes=-1 \</span><br><span class="line">          --override log.retention.hours=168 \</span><br><span class="line">          --override log.roll.hours=168 \</span><br><span class="line">          --override log.roll.jitter.hours=0 \</span><br><span class="line">          --override log.segment.bytes=1073741824 \</span><br><span class="line">          --override log.segment.delete.delay.ms=60000 \</span><br><span class="line">          --override message.max.bytes=1000012 \</span><br><span class="line">          --override min.insync.replicas=1 \</span><br><span class="line">          --override num.io.threads=8 \</span><br><span class="line">          --override num.network.threads=3 \</span><br><span class="line">          --override num.recovery.threads.per.data.dir=1 \</span><br><span class="line">          --override num.replica.fetchers=1 \</span><br><span class="line">          --override offset.metadata.max.bytes=4096 \</span><br><span class="line">          --override offsets.commit.required.acks=-1 \</span><br><span class="line">          --override offsets.commit.timeout.ms=5000 \</span><br><span class="line">          --override offsets.load.buffer.size=5242880 \</span><br><span class="line">          --override offsets.retention.check.interval.ms=600000 \</span><br><span class="line">          --override offsets.retention.minutes=1440 \</span><br><span class="line">          --override offsets.topic.compression.codec=0 \</span><br><span class="line">          --override offsets.topic.num.partitions=50 \</span><br><span class="line">          --override offsets.topic.replication.factor=3 \</span><br><span class="line">          --override offsets.topic.segment.bytes=104857600 \</span><br><span class="line">          --override queued.max.requests=500 \</span><br><span class="line">          --override quota.consumer.default=9223372036854775807 \</span><br><span class="line">          --override quota.producer.default=9223372036854775807 \</span><br><span class="line">          --override replica.fetch.min.bytes=1 \</span><br><span class="line">          --override replica.fetch.wait.max.ms=500 \</span><br><span class="line">          --override replica.high.watermark.checkpoint.interval.ms=5000 \</span><br><span class="line">          --override replica.lag.time.max.ms=10000 \</span><br><span class="line">          --override replica.socket.receive.buffer.bytes=65536 \</span><br><span class="line">          --override replica.socket.timeout.ms=30000 \</span><br><span class="line">          --override request.timeout.ms=30000 \</span><br><span class="line">          --override socket.receive.buffer.bytes=102400 \</span><br><span class="line">          --override socket.request.max.bytes=104857600 \</span><br><span class="line">          --override socket.send.buffer.bytes=102400 \</span><br><span class="line">          --override unclean.leader.election.enable=true \</span><br><span class="line">          --override zookeeper.session.timeout.ms=6000 \</span><br><span class="line">          --override zookeeper.set.acl=false \</span><br><span class="line">          --override broker.id.generation.enable=true \</span><br><span class="line">          --override connections.max.idle.ms=600000 \</span><br><span class="line">          --override controlled.shutdown.enable=true \</span><br><span class="line">          --override controlled.shutdown.max.retries=3 \</span><br><span class="line">          --override controlled.shutdown.retry.backoff.ms=5000 \</span><br><span class="line">          --override controller.socket.timeout.ms=30000 \</span><br><span class="line">          --override default.replication.factor=1 \</span><br><span class="line">          --override fetch.purgatory.purge.interval.requests=1000 \</span><br><span class="line">          --override group.max.session.timeout.ms=300000 \</span><br><span class="line">          --override group.min.session.timeout.ms=6000 \</span><br><span class="line">          --override log.cleaner.backoff.ms=15000 \</span><br><span class="line">          --override log.cleaner.dedupe.buffer.size=134217728 \</span><br><span class="line">          --override log.cleaner.delete.retention.ms=86400000 \</span><br><span class="line">          --override log.cleaner.enable=true \</span><br><span class="line">          --override log.cleaner.io.buffer.load.factor=0.9 \</span><br><span class="line">          --override log.cleaner.io.buffer.size=524288 \</span><br><span class="line">          --override log.cleaner.io.max.bytes.per.second=1.7976931348623157E308 \</span><br><span class="line">          --override log.cleaner.min.cleanable.ratio=0.5 \</span><br><span class="line">          --override log.cleaner.min.compaction.lag.ms=0 \</span><br><span class="line">          --override log.cleaner.threads=1 \</span><br><span class="line">          --override log.cleanup.policy=delete \</span><br><span class="line">          --override log.index.interval.bytes=4096 \</span><br><span class="line">          --override log.index.size.max.bytes=10485760 \</span><br><span class="line">          --override log.message.timestamp.difference.max.ms=9223372036854775807 \</span><br><span class="line">          --override log.message.timestamp.type=CreateTime \</span><br><span class="line">          --override log.preallocate=false \</span><br><span class="line">          --override log.retention.check.interval.ms=300000 \</span><br><span class="line">          --override max.connections.per.ip=2147483647 \</span><br><span class="line">          --override num.partitions=1 \</span><br><span class="line">          --override producer.purgatory.purge.interval.requests=1000 \</span><br><span class="line">          --override replica.fetch.backoff.ms=1000 \</span><br><span class="line">          --override replica.fetch.max.bytes=1048576 \</span><br><span class="line">          --override replica.fetch.response.max.bytes=10485760 \</span><br><span class="line">          --override reserved.broker.max.id=1000&quot;</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: data</span><br><span class="line">            mountPath: /var/lib/kafka/data</span><br><span class="line">        env:</span><br><span class="line">        - name: MY_POD_NAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.name</span><br><span class="line">        - name: ALLOW_PLAINTEXT_LISTENER</span><br><span class="line">          value: &quot;yes&quot;</span><br><span class="line">        - name: KAFKA_HEAP_OPTS</span><br><span class="line">          value : &quot;-Xms1g -Xmx1g&quot;</span><br><span class="line">        - name: KAFKA_OPTS</span><br><span class="line">          value: &quot;-Dlogging.level=INFO&quot;</span><br><span class="line">        - name: JMX_PORT</span><br><span class="line">          value: &quot;5555&quot;</span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">    - metadata:</span><br><span class="line">        name: data</span><br><span class="line">      spec:</span><br><span class="line">        accessModes: [&quot;ReadWriteOnce&quot;]</span><br><span class="line">        storageClassName: longhorn</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 10Gi</span><br></pre></td></tr></table></figure><h4 id="检查所有pod启动无报错"><a href="#检查所有pod启动无报错" class="headerlink" title="检查所有pod启动无报错"></a>检查所有pod启动无报错</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-h3c-master01 kafka]# kubectl get pod -n kafka</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE</span><br><span class="line">kafka-0       1/1     Running   0          1m</span><br><span class="line">kafka-1       1/1     Running   0          1m</span><br><span class="line">kafka-2       1/1     Running   0          1m</span><br><span class="line">zookeeper-0   1/1     Running   0          7m</span><br><span class="line">zookeeper-1   1/1     Running   0          7m</span><br><span class="line">zookeeper-2   1/1     Running   0          7m</span><br></pre></td></tr></table></figure><h3 id="部署Kafka-eagle可视化"><a href="#部署Kafka-eagle可视化" class="headerlink" title="部署Kafka-eagle可视化"></a>部署Kafka-eagle可视化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-eagle</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: kafka-eagle</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: kafka-eagle</span><br><span class="line">    spec:</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      containers:</span><br><span class="line">          # 源镜像地址：nickzurich/efak:3.0.1</span><br><span class="line">        - image: harbor.basepoint.net/library/efak:3.0.1</span><br><span class="line">          imagePullPolicy: IfNotPresent</span><br><span class="line">          name: kafka-eagle</span><br><span class="line">          env:</span><br><span class="line">            - name: EFAK_CLUSTER_ZK_LIST</span><br><span class="line">              value: zookeeper-0.zookeeper-headless.kafka.svc.cluster.local:2181,zookeeper-1.zookeeper-headless.kafka.svc.cluster.local:2181,zookeeper-2.zookeeper-headless.kafka.svc.cluster.local:2181</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8048</span><br><span class="line">              name: web</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-eagle</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8048</span><br><span class="line">      targetPort: 8048</span><br><span class="line">      nodePort: 30048</span><br><span class="line">      name: web</span><br><span class="line">  selector:</span><br><span class="line">    app: kafka-eagle</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>登录eagle，http:&#x2F;&#x2F;ip:30048</p><p>账户admin，密码123456</p><p><img src="/images/image-gbbm.png"></p><p><img src="/images/image-wjpu.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;部署zookeeper（三节点）&quot;&gt;&lt;a href=&quot;#部署zookeeper（三节点）&quot; class=&quot;headerlink&quot; title=&quot;部署zookeeper（三节点）&quot;&gt;&lt;/a&gt;部署zookeeper（三节点）&lt;/h3&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="kafka" scheme="https://sreok.github.io/tags/kafka/"/>
    
    <category term="Zookeeper" scheme="https://sreok.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Kafka数据同步（三）：利用Debezium实时捕获MySQL数据变更输出到MySQL</title>
    <link href="https://sreok.github.io/2024/08/24/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kafka%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%88%A9%E7%94%A8Debezium%E5%AE%9E%E6%97%B6%E6%8D%95%E8%8E%B7MySQL%E6%95%B0%E6%8D%AE%E5%8F%98%E6%9B%B4%E8%BE%93%E5%87%BA%E5%88%B0MySQL/"/>
    <id>https://sreok.github.io/2024/08/24/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kafka%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%88%A9%E7%94%A8Debezium%E5%AE%9E%E6%97%B6%E6%8D%95%E8%8E%B7MySQL%E6%95%B0%E6%8D%AE%E5%8F%98%E6%9B%B4%E8%BE%93%E5%87%BA%E5%88%B0MySQL/</id>
    <published>2024-08-24T11:06:03.000Z</published>
    <updated>2025-06-30T08:22:52.863Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li><p>安装kafka</p><ul><li>原文地址：<a href="https://sreok.cn/archives/82c5ae3b-ffd0-4089-90b5-d048a0243e74">Kubernetes部署Zookeeper（v3.9）+ Kafka（v3.7.0）集群 （manifest方式） - Elijah Blog (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/82c5ae3b-ffd0-4089-90b5-d048a0243e74">)</a></li></ul></li></ul><ul><li><p>安装kafka connect（debezium）</p><ul><li>原文地址：<a href="https://sreok.cn/archives/c8d918ed-5252-490d-b08c-86f7e257c37b">利用Debezium实时捕获MySQL数据变更到Kafka（manifest方式） - Elijah Blog (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/c8d918ed-5252-490d-b08c-86f7e257c37b">)</a></li></ul></li></ul><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="/images/image-jyzn.png"></p><h3 id="获取所有connector-plugins"><a href="#获取所有connector-plugins" class="headerlink" title="获取所有connector-plugins"></a>获取所有connector-plugins</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:3083/connector-plugins | jq</span><br></pre></td></tr></table></figure><blockquote><p><code>type: source</code>：源数据插件</p><p><code>type: sink</code>：目标数据插件</p><p>默认内置插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[kafka@kafka-connect-769747b4bb-vqkld connect]$ ls -l</span><br><span class="line">total 52</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-db2</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-ibmi</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-informix</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-jdbc</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-mongodb</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-mysql</span><br><span class="line">drwxr-xr-x 2 kafka kafka 8192 Jul 26 04:26 debezium-connector-oracle</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-postgres</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-spanner</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-sqlserver</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-vitess</span><br></pre></td></tr></table></figure><p>源数据插件使用：<code>io.debezium.connector.mysql.MySqlConnector</code></p><p>debezium镜像默认只有一个jdbc的目标数据插件：<code>io.debezium.connector.jdbc.JdbcSinkConnector</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:3083/connector-plugins | jq ｜ grep sink -C 1</span><br></pre></td></tr></table></figure></blockquote><h3 id="创建source-connector（源连接器）"><a href="#创建source-connector（源连接器）" class="headerlink" title="创建source connector（源连接器）"></a>创建source connector（源连接器）</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source-mysql-connector&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;connector.class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;io.debezium.connector.mysql.MySqlConnector&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;tasks.max&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 源数据库配置 </span></span><br><span class="line">        <span class="attr">&quot;database.hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysql.mysql.svc.cluster.local&quot;</span><span class="punctuation">,</span>  </span><br><span class="line">        <span class="attr">&quot;database.port&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3306&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;database.user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;root&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;database.password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;password&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">//  此数据库客户机的数字ID,必须是唯一的,连接器使用此ID将MySQL数据库集群加入为另一台服务器。</span></span><br><span class="line">        <span class="attr">&quot;database.server.id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;184054&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 源连接器的kafka主题，这个主题可以获取表的增删改操作</span></span><br><span class="line">        <span class="attr">&quot;topic.prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysql&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 只获取testdb库</span></span><br><span class="line">        <span class="attr">&quot;database.include.list&quot;</span><span class="punctuation">:</span> <span class="string">&quot;testdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 仅同步testdb数据库下的test_tables表</span></span><br><span class="line">        <span class="attr">&quot;table.include.list&quot;</span><span class="punctuation">:</span> <span class="string">&quot;testdb.test_tables&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// kafka地址</span></span><br><span class="line">        <span class="attr">&quot;schema.history.internal.kafka.bootstrap.servers&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kafka.kafka.svc.cluster.local:9092&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 历史记录字段，仅debezium内部使用。</span></span><br><span class="line">        <span class="attr">&quot;schema.history.internal.kafka.topic&quot;</span><span class="punctuation">:</span> <span class="string">&quot;schema-changes.testdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 主键字段，testdb开头的数据库，id字段</span></span><br><span class="line">        <span class="attr">&quot;message.key.columns&quot;</span><span class="punctuation">:</span> <span class="string">&quot;testdb(.*):id&quot;</span></span><br><span class="line">        <span class="comment">// 指定连接器向 Kafka 主题发送检测信号消息的频率,默认0</span></span><br><span class="line">    <span class="attr">&quot;heartbeat.interval.ms&quot;</span><span class="punctuation">:</span> <span class="string">&quot;100&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 指定连接器是否将数据库架构发生的更改发布到具有数据库服务器 ID 名称的 Kafka 主题</span></span><br><span class="line">    <span class="attr">&quot;include.schema.changes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 指定连接器是否在元数据对象上分析和发布表和列注释。</span></span><br><span class="line">    <span class="attr">&quot;include.schema.comments&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 快照模式，默认就是initial</span></span><br><span class="line">    <span class="attr">&quot;snapshot.mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;initial&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 通过route获取数据库名作为kafka主题名</span></span><br><span class="line">    <span class="comment">// &quot;transforms&quot;: &quot;route&quot;,</span></span><br><span class="line">    <span class="comment">// &quot;transforms.route.type&quot;: &quot;org.apache.kafka.connect.transforms.RegexRouter&quot;,</span></span><br><span class="line">    <span class="comment">// &quot;transforms.route.regex&quot;: &quot;([^.]+)\\.([^.]+)\\.([^.]+)&quot;,</span></span><br><span class="line">    <span class="comment">// &quot;transforms.route.replacement&quot;: &quot;$3&quot;,</span></span><br><span class="line">        <span class="comment">// 指定删除事件后是否跟有逻辑删除事件，默认就是true</span></span><br><span class="line">    <span class="comment">// &quot;tombstones.on.delete&quot;: &quot;true&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>参数地址：<a href="https://debezium.io/documentation/reference/stable/connectors/mysql.html">https://debezium.io/documentation/reference/stable/connectors/mysql.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST -H &quot;Accept:application/json&quot; -H &quot;Content-Type:application/json&quot; http://localhost:3083/connectors -d @source-mysql-connector.json</span><br></pre></td></tr></table></figure><h3 id="创建sink-connector（目标连接器）"><a href="#创建sink-connector（目标连接器）" class="headerlink" title="创建sink connector（目标连接器）"></a>创建sink connector（目标连接器）</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sink-mysql-connector&quot;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="attr">&quot;config&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;connector.class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;io.debezium.connector.jdbc.JdbcSinkConnector&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">// 目标数据库：jdbc:mysql://mysql地址/数据库</span></span><br><span class="line">   <span class="attr">&quot;connection.url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jdbc:mysql://mysqltest.mysql.svc.cluster.local:3306/test&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;connection.username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;root&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;connection.password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;password&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;tasks.max&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">// 源kafka主题</span></span><br><span class="line">   <span class="attr">&quot;topics&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysql.testdb.test_tables&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;dialect.name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MySqlDatabaseDialect&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">// 保证删除能正确消费的参数</span></span><br><span class="line">   <span class="attr">&quot;debezium.sink.databend.upsert-keep-deletes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;false&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;transforms&quot;</span><span class="punctuation">:</span> <span class="string">&quot;unwrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;transforms.unwrap.type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;io.debezium.transforms.ExtractNewRecordState&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;transforms.unwrap.drop.tombstones&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;transforms.unwrap.delete.handling.mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rewrite&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;schema.evolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;basic&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">// 如果主键不存在，则连接器执行INSERT操作，如果键存在，则连接器执行UPDATE操作</span></span><br><span class="line">   <span class="attr">&quot;insert.mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;upsert&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">// </span></span><br><span class="line">   <span class="attr">&quot;delete.enabled&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="comment">// 主键,如果&quot;delete.enabled&quot;: &quot;true&quot;，这个配置不能为空</span></span><br><span class="line">   <span class="attr">&quot;primary.key.fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;id&quot;</span></span><br><span class="line">   <span class="attr">&quot;primary.key.mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;record_key&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;database.time_zone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UTC&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>参数地址：<a href="https://debezium.io/documentation/reference/stable/connectors/jdbc.html">https://debezium.io/documentation/reference/stable/connectors/jdbc.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST -H &quot;Accept:application/json&quot; -H &quot;Content-Type:application/json&quot; http://localhost:3083/connectors -d @sink-mysql-connector.json</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>源数据库，新增数据，并删除一部分</p><p><img src="/images/image-wngk.png"></p><p>目标数据库查看</p><blockquote><p>数据库表名为kafka主题名，<code>.</code>改为<code>_</code></p></blockquote><p><img src="/images/image-uuhh.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装kafka&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文地址：&lt;a href=&quot;https://sreok.cn/a</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="kafka" scheme="https://sreok.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Kafka数据同步（二）：Debezium Kafka Connect创建connector三种方式（manifest方式）</title>
    <link href="https://sreok.github.io/2024/08/21/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kafka%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ADebezium%20Kafka%20Connect%E5%88%9B%E5%BB%BAconnector%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/08/21/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kafka%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ADebezium%20Kafka%20Connect%E5%88%9B%E5%BB%BAconnector%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2024-08-21T09:06:03.000Z</published>
    <updated>2025-06-30T08:21:31.176Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方式一：通过Debezium-UI-创建connector"><a href="#方式一：通过Debezium-UI-创建connector" class="headerlink" title="方式一：通过Debezium UI 创建connector"></a>方式一：通过Debezium UI 创建connector</h3><p><img src="/images/image-gkes.png"></p><p><img src="/images/image-vnfk.png"></p><p><img src="/images/image-nxgd.png"></p><p><img src="/images/image-hhxz.png"></p><h3 id="方式二：通过connect-REST-API-创建connector（curl方式）"><a href="#方式二：通过connect-REST-API-创建connector（curl方式）" class="headerlink" title="方式二：通过connect REST API 创建connector（curl方式）"></a>方式二：通过connect REST API 创建connector（curl方式）</h3><p>查看所有connector</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H &quot;Accept:application/json&quot; localhost:8083/connectors/</span><br></pre></td></tr></table></figure><p>创建connector</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST -H &quot;Accept:application/json&quot; -H &quot;Content-Type:application/json&quot; localhost:8083/connectors/ -d &#x27;&#123; &quot;name&quot;: &quot;test-connector&quot;, &quot;config&quot;: &#123; &quot;connector.class&quot;: &quot;io.debezium.connector.mysql.MySqlConnector&quot;, &quot;tasks.max&quot;: &quot;1&quot;, &quot;database.hostname&quot;: &quot;mysql&quot;, &quot;database.port&quot;: &quot;3306&quot;, &quot;database.user&quot;: &quot;root&quot;, &quot;database.password&quot;: &quot;password&quot;, &quot;database.server.id&quot;: &quot;184054&quot;, &quot;topic.prefix&quot;: &quot;mysql&quot;, &quot;database.include.list&quot;: &quot;testdb&quot;, &quot;schema.history.internal.kafka.bootstrap.servers&quot;: &quot;kafka.kafka.svc.cluster.local:9092&quot;, &quot;schema.history.internal.kafka.topic&quot;: &quot;schemahistory.inventory&quot; &#125; &#125;&#x27;</span><br></pre></td></tr></table></figure><p>查看创建的test-connector</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H &quot;Accept:application/json&quot; localhost:8083/connectors/test-connector</span><br></pre></td></tr></table></figure><blockquote><p>test-connector：新建的connector名称</p></blockquote><p>删除test-connector</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X DELETE -H &quot;Accept:application/json&quot; localhost:8083/connectors/test-connector</span><br></pre></td></tr></table></figure><h3 id="方式三：通过connect-REST-API-创建connector（post工具方式）"><a href="#方式三：通过connect-REST-API-创建connector（post工具方式）" class="headerlink" title="方式三：通过connect REST API 创建connector（post工具方式）"></a>方式三：通过connect REST API 创建connector（post工具方式）</h3><p>查看所有 connector</p><p><img src="/images/image-dcwf.png"></p><p>创建connector</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;name&quot;: &quot;test-connector&quot;,</span><br><span class="line">&quot;config&quot;: &#123;</span><br><span class="line">&quot;connector.class&quot;: &quot;io.debezium.connector.mysql.MySqlConnector&quot;,</span><br><span class="line">&quot;tasks.max&quot;: &quot;1&quot;,  </span><br><span class="line">        &quot;database.hostname&quot;: &quot;mysql&quot;,  </span><br><span class="line">        &quot;database.port&quot;: &quot;3306&quot;,</span><br><span class="line">        &quot;database.user&quot;: &quot;root&quot;,</span><br><span class="line">        &quot;database.password&quot;: &quot;password&quot;,</span><br><span class="line">        &quot;database.server.id&quot;: &quot;184054&quot;,</span><br><span class="line">        &quot;topic.prefix&quot;: &quot;mysql&quot;,</span><br><span class="line">        &quot;database.include.list&quot;: &quot;testdb&quot;,</span><br><span class="line">        &quot;table.include.list&quot;: &quot;testdb.test_tables&quot;,</span><br><span class="line">        &quot;schema.history.internal.kafka.bootstrap.servers&quot;: &quot;kafka.kafka.svc.cluster.local:9092&quot;,  </span><br><span class="line">        &quot;schema.history.internal.kafka.topic&quot;: &quot;schema-changes.inventory&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-wzrf.png"></p><p>查看创建的test-connector</p><p><img src="/images/image-czlc.png">删除connector</p><p><img src="/images/image-zxff.png"></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>以上三种方式创建connector时，connect容器日志中会输出以下内容，验证新增的connector是否有效</p><p><img src="/images/image-toyr.png"></p><h4 id="获取所有connect-plugins"><a href="#获取所有connect-plugins" class="headerlink" title="获取所有connect plugins"></a>获取所有connect plugins</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8083/connector-plugins</span><br></pre></td></tr></table></figure><h4 id="查看表更新"><a href="#查看表更新" class="headerlink" title="查看表更新"></a><strong>查看表更新</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动一个pod watcher监控数据表增删改，只作用database.include.list定义的数据库 </span><br><span class="line">kubectl run -n kafka -it --rm --image=quay.io/debezium/tooling:1.2  --restart=Never watcher -- kcat -b kafka-kafka-bootstrap:9092 -C -o beginning -t mysql</span><br><span class="line">​</span><br><span class="line"># kubectl run -n kafka -it --rm --image=harbor.basepoint.net/library/tooling:1.2  --restart=Never watcher -- kcat -b kafka.kafka.svc.cluster.local:9092 -C -o beginning -t mysql</span><br></pre></td></tr></table></figure><h4 id="查看数据更新"><a href="#查看数据更新" class="headerlink" title="查看数据更新"></a><strong>查看数据更新</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动一个pod watcher2监控user表数据增删改</span><br><span class="line">kubectl run -n kafka -it --rm --image=quay.io/debezium/tooling:1.2  --restart=Never watcher2 -- kcat -b kafka-kafka-bootstrap:9092 -C -o beginning -t mysql.testdb.user</span><br><span class="line">​</span><br><span class="line"># kubectl run -n kafka -it --rm --image=harbor.basepoint.net/library/tooling:1.2  --restart=Never watcher2 -- kcat -b kafka.kafka.svc.cluster.local:9092 -C -o beginning -t mysql.testdb.user</span><br></pre></td></tr></table></figure><p><code>如果提示watcher或watcher2 Already exists，需要执行下面命令删除pod</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -n kafka watcher --force</span><br><span class="line">kubectl delete pod -n kafka watcher2 --force</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;方式一：通过Debezium-UI-创建connector&quot;&gt;&lt;a href=&quot;#方式一：通过Debezium-UI-创建connector&quot; class=&quot;headerlink&quot; title=&quot;方式一：通过Debezium UI 创建connector&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="kafka" scheme="https://sreok.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Kafka数据同步（一）：Kafka Connect部署Debezium v2.7数据实时捕获工具（manifest方式）</title>
    <link href="https://sreok.github.io/2024/08/20/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kafka%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AKafka%20Connect%E9%83%A8%E7%BD%B2Debezium%20v2.7%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E6%8D%95%E8%8E%B7%E5%B7%A5%E5%85%B7%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/08/20/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kafka%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AKafka%20Connect%E9%83%A8%E7%BD%B2Debezium%20v2.7%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E6%8D%95%E8%8E%B7%E5%B7%A5%E5%85%B7%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2024-08-20T09:06:03.000Z</published>
    <updated>2025-06-30T08:20:24.256Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>部署kafka，原文地址：<a href="https://sreok.cn/archives/82c5ae3b-ffd0-4089-90b5-d048a0243e74">Kubernetes部署Zookeeper（v3.9）+ Kafka（v3.7.0）集群 （manifest方式） - Elijah Blog (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/82c5ae3b-ffd0-4089-90b5-d048a0243e74">)</a></li></ul><h3 id="部署Debezium-Plugins"><a href="#部署Debezium-Plugins" class="headerlink" title="部署Debezium Plugins"></a>部署Debezium Plugins</h3><p>创建pvc，用于放connect plugins</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-plugins</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br><span class="line">  # 使用nfs方便放置</span><br><span class="line">  storageClassName: nfs-storage</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-debezium-connect</span><br><span class="line">  namespace: kafka</span><br><span class="line">  labels:</span><br><span class="line">    app: kafka-debezium-connect</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: kafka-debezium-connect</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: kafka-debezium-connect</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: connect</span><br><span class="line">        image: harbor.basepoint.net/library/connect:2.7</span><br><span class="line">        env:</span><br><span class="line">          - name: GROUP_ID</span><br><span class="line">            value: &quot;1&quot;</span><br><span class="line">          - name: CONFIG_STORAGE_TOPIC</span><br><span class="line">            value: connect-cluster-offsets</span><br><span class="line">          - name: OFFSET_STORAGE_TOPIC</span><br><span class="line">            value: connect-cluster-configs</span><br><span class="line">          - name: STATUS_STORAGE_TOPIC</span><br><span class="line">            value: connect-cluster-status</span><br><span class="line">          - name: KAFKA_CONNECT_PLUGINS_DIR</span><br><span class="line">            value: /kafka/connect/,/usr/local/share/kafka/plugins</span><br><span class="line">          - name: CONNECT_TOPIC_CREATION_ENABLE</span><br><span class="line">            value: &quot;true&quot;</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: plugins</span><br><span class="line">          mountPath: /usr/local/share/kafka/plugins</span><br><span class="line">      volumes:</span><br><span class="line">      - name: plugins</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: kafka-plugins</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-debezium-connect</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: kafka-debezium-connect</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 8083</span><br><span class="line">      targetPort: 8083</span><br><span class="line">      nodePort: 31083</span><br><span class="line">      name: restapi</span><br></pre></td></tr></table></figure><p>容器已内置了以下插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[kafka@kafka-connect-769747b4bb-vqkld connect]$ ls -l</span><br><span class="line">total 52</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-db2</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-ibmi</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-informix</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-jdbc</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-mongodb</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-mysql</span><br><span class="line">drwxr-xr-x 2 kafka kafka 8192 Jul 26 04:26 debezium-connector-oracle</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-postgres</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-spanner</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-sqlserver</span><br><span class="line">drwxr-xr-x 2 kafka kafka 4096 Jul 26 04:26 debezium-connector-vitess</span><br></pre></td></tr></table></figure><p>confluence的jdbc下载地址：<a href="https://www.confluent.io/hub/confluentinc/kafka-connect-jdbc">JDBC Connector (Source and Sink) | Confluent Hub: Apache Kafka Connectors for Streaming Data</a></p><p>放置pvc目录中，重启connect</p><p><img src="/images/image-dfzv.png"></p><h4 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h4><p>to many open file</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">fs.inotify.max_user_instances = 819200</span><br><span class="line">fs.inotify.max_queued_events = 1638400</span><br><span class="line">fs.inotify.max_user_watches = 52428800</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h3 id="部署debezium-UI"><a href="#部署debezium-UI" class="headerlink" title="部署debezium UI"></a>部署debezium UI</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: debezium-ui</span><br><span class="line">  namespace: kafka</span><br><span class="line">  labels:</span><br><span class="line">    app: debezium-ui</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: debezium-ui</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: debezium-ui</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ui</span><br><span class="line">        # 最新源地址：quay.io/debezium/debezium-ui:2.5，版本不兼容</span><br><span class="line">        # image: harbor.basepoint.net/library/debezium-ui:2.5</span><br><span class="line">        # 源地址：debezium/debezium-ui:2.1.2.Final</span><br><span class="line">        image: harbor.basepoint.net/library/debezium-ui:2.1.2.Final</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        env:</span><br><span class="line">          - name: KAFKA_CONNECT_URIS</span><br><span class="line">            # connect地址</span><br><span class="line">            value: http://kafka-connect.kafka.svc.cluster.local:8083</span><br><span class="line">          - name: DEPLOYMENT_MODE</span><br><span class="line">            value: default</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: debezium-ui</span><br><span class="line">  namespace: kafka</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: debezium-ui</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 8080</span><br><span class="line">      targetPort: 8080</span><br><span class="line">      nodePort: 30080</span><br><span class="line">      name: restapi</span><br></pre></td></tr></table></figure><p>UI请求有问题请求不到MangoDB.json，先保留后续研究。</p><blockquote><p>结论：debezium-ui镜像版本与debezium-connect镜像版本不兼容，目前ui没有2.7版本，2.5不兼容，最终使用：<code>debezium/debezium-ui:2.1.2.Final</code>镜像版本。</p><p>虽然debezium-ui:2.1.2.Final版本还是有报错，但至少能创建Connector了</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;部署kafka，原文地址：&lt;a href=&quot;https://sreok.cn/archives/82c5ae3b</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="kafka" scheme="https://sreok.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】利用Strimzi Operator部署kafka集群并将MySQL数据通过Debezium同步到Kafka</title>
    <link href="https://sreok.github.io/2024/08/18/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E5%88%A9%E7%94%A8Strimzi%20Operator%E9%83%A8%E7%BD%B2kafka%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%B0%86MySQL%E6%95%B0%E6%8D%AE%E9%80%9A%E8%BF%87Debezium%E5%90%8C%E6%AD%A5%E5%88%B0Kafka/"/>
    <id>https://sreok.github.io/2024/08/18/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E5%88%A9%E7%94%A8Strimzi%20Operator%E9%83%A8%E7%BD%B2kafka%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%B0%86MySQL%E6%95%B0%E6%8D%AE%E9%80%9A%E8%BF%87Debezium%E5%90%8C%E6%AD%A5%E5%88%B0Kafka/</id>
    <published>2024-08-18T09:06:03.000Z</published>
    <updated>2025-06-30T09:58:05.205Z</updated>
    
    <content type="html"><![CDATA[<p>官方地址：<a href="https://debezium.io/documentation/reference/2.7/operations/kubernetes.html">在 Kubernetes 上部署 Debezium ：： Debezium Documentation — Deploying Debezium on Kubernetes :: Debezium Documentation</a></p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li><p>私有镜像仓库（制作connect镜像）</p><ul><li><p>Harbor原文地址：<a href="https://sreok.cn/archives/d5be0c00-46b6-44d9-9a32-6a7c933ab822">【DevOps】Harbor私有镜像仓库并利用cert-manager自签名证书开启HTTPS（helm方式安装） - Elijah Blog (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/d5be0c00-46b6-44d9-9a32-6a7c933ab822">)</a></p></li><li><p>docker registry：</p></li></ul></li></ul><h4 id="安装OLM"><a href="#安装OLM" class="headerlink" title="安装OLM"></a>安装OLM</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.20.0/install.sh | bash -s v0.20.0</span><br></pre></td></tr></table></figure><h4 id="安装Operator"><a href="#安装Operator" class="headerlink" title="安装Operator"></a>安装Operator</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f https://operatorhub.io/install/strimzi-kafka-operator.yaml</span><br></pre></td></tr></table></figure><h3 id="部署kafka集群"><a href="#部署kafka集群" class="headerlink" title="部署kafka集群"></a>部署kafka集群</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: kafka.strimzi.io/v1beta2</span><br><span class="line">kind: Kafka</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka</span><br><span class="line">spec:</span><br><span class="line">  kafka:</span><br><span class="line">    replicas: 1</span><br><span class="line">    listeners:</span><br><span class="line">      - name: plain</span><br><span class="line">        port: 9092</span><br><span class="line">        type: internal</span><br><span class="line">        tls: false</span><br><span class="line">      - name: tls</span><br><span class="line">        port: 9093</span><br><span class="line">        type: internal</span><br><span class="line">        tls: true</span><br><span class="line">        authentication:</span><br><span class="line">          type: tls</span><br><span class="line">      - name: external</span><br><span class="line">        port: 9094</span><br><span class="line">        type: nodeport</span><br><span class="line">        tls: false</span><br><span class="line">    storage:</span><br><span class="line">      type: jbod</span><br><span class="line">      volumes:</span><br><span class="line">      - id: 0</span><br><span class="line">        type: persistent-claim</span><br><span class="line">        size: 20Gi</span><br><span class="line">        deleteClaim: false</span><br><span class="line">    config:</span><br><span class="line">      offsets.topic.replication.factor: 1</span><br><span class="line">      transaction.state.log.replication.factor: 1</span><br><span class="line">      transaction.state.log.min.isr: 1</span><br><span class="line">      default.replication.factor: 1</span><br><span class="line">      min.insync.replicas: 1</span><br><span class="line">  zookeeper:</span><br><span class="line">    replicas: 1</span><br><span class="line">    storage:</span><br><span class="line">      type: persistent-claim</span><br><span class="line">      size: 20Gi</span><br><span class="line">      deleteClaim: false</span><br><span class="line">  entityOperator:</span><br><span class="line">    topicOperator: &#123;&#125;</span><br><span class="line">    userOperator: &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="部署Kafka-Connect-集群（构建MySQL插件镜像）"><a href="#部署Kafka-Connect-集群（构建MySQL插件镜像）" class="headerlink" title="部署Kafka Connect 集群（构建MySQL插件镜像）"></a>部署Kafka Connect 集群（构建MySQL插件镜像）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: kafka.strimzi.io/v1beta2</span><br><span class="line">kind: KafkaConnect</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-connect</span><br><span class="line">  annotations:</span><br><span class="line">    strimzi.io/use-connector-resources: &quot;true&quot;</span><br><span class="line">spec:</span><br><span class="line">  # 版本3.7.0，默认3.1.0与MySQL 8.0.x不兼容</span><br><span class="line">  version: 3.7.0</span><br><span class="line">  replicas: 1</span><br><span class="line">  bootstrapServers: kafka-kafka-bootstrap:9092</span><br><span class="line">  config:</span><br><span class="line">    config.providers: secrets</span><br><span class="line">    config.providers.secrets.class: io.strimzi.kafka.KubernetesSecretConfigProvider</span><br><span class="line">    group.id: connect-cluster</span><br><span class="line">    offset.storage.topic: connect-cluster-offsets</span><br><span class="line">    config.storage.topic: connect-cluster-configs</span><br><span class="line">    status.storage.topic: connect-cluster-status</span><br><span class="line">    # -1 means it will use the default replication factor configured in the broker</span><br><span class="line">    config.storage.replication.factor: -1</span><br><span class="line">    offset.storage.replication.factor: -1</span><br><span class="line">    status.storage.replication.factor: -1</span><br><span class="line">  build:</span><br><span class="line">    output:</span><br><span class="line">      type: docker</span><br><span class="line">      # 存在的私有镜像仓库地址</span><br><span class="line">      image: 10.20.13.140:5000/debezium-connect-mysql:latest</span><br><span class="line">    plugins:</span><br><span class="line">      - name: debezium-mysql-connector</span><br><span class="line">        artifacts:</span><br><span class="line">          - type: tgz</span><br><span class="line">            url: https://repo1.maven.org/maven2/io/debezium/debezium-connector-mysql/2.7.0.Final/debezium-connector-mysql-2.7.0.Final-plugin.tar.gz</span><br></pre></td></tr></table></figure><p>如果已存在可用镜像，使用以下方式</p><h3 id="部署Kafka-Connect-集群（使用已有镜像）"><a href="#部署Kafka-Connect-集群（使用已有镜像）" class="headerlink" title="部署Kafka Connect 集群（使用已有镜像）"></a>部署Kafka Connect 集群（使用已有镜像）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: kafka.strimzi.io/v1beta2</span><br><span class="line">kind: KafkaConnect</span><br><span class="line">metadata:</span><br><span class="line">  name: kafka-connect</span><br><span class="line">  annotations:</span><br><span class="line">    strimzi.io/use-connector-resources: &quot;true&quot;</span><br><span class="line">spec:</span><br><span class="line">  version: 3.7.0</span><br><span class="line">  image: 10.20.13.140:5000/debezium-connect-mysql:latest</span><br><span class="line">  replicas: 1</span><br><span class="line">  bootstrapServers: kafka-kafka-bootstrap:9092</span><br><span class="line">  config:</span><br><span class="line">    config.providers: secrets</span><br><span class="line">    config.providers.secrets.class: io.strimzi.kafka.KubernetesSecretConfigProvider</span><br><span class="line">    group.id: connect-cluster</span><br><span class="line">    offset.storage.topic: connect-cluster-offsets</span><br><span class="line">    config.storage.topic: connect-cluster-configs</span><br><span class="line">    status.storage.topic: connect-cluster-status</span><br><span class="line">    # -1 means it will use the default replication factor configured in the broker</span><br><span class="line">    config.storage.replication.factor: -1</span><br><span class="line">    offset.storage.replication.factor: -1</span><br><span class="line">    status.storage.replication.factor: -1</span><br></pre></td></tr></table></figure><h3 id="创建MySQL-Connector"><a href="#创建MySQL-Connector" class="headerlink" title="创建MySQL Connector"></a>创建MySQL Connector</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: kafka.strimzi.io/v1beta2</span><br><span class="line">kind: KafkaConnector</span><br><span class="line">metadata:</span><br><span class="line">  name: debezium-connector-mysql</span><br><span class="line">  labels:</span><br><span class="line">    strimzi.io/cluster: kafka-connect</span><br><span class="line">spec:</span><br><span class="line">  class: io.debezium.connector.mysql.MySqlConnector</span><br><span class="line">  tasksMax: 1</span><br><span class="line">  config:</span><br><span class="line">    tasks.max: 1</span><br><span class="line">    database.hostname: mysql</span><br><span class="line">    database.port: 3306</span><br><span class="line">    database.user: root</span><br><span class="line">    database.password: password</span><br><span class="line">    # database.user: $&#123;secrets:debezium-example/debezium-secret:username&#125;</span><br><span class="line">    # database.password: $&#123;secrets:debezium-example/debezium-secret:password&#125;</span><br><span class="line">    database.server.id: 184054</span><br><span class="line">    topic.prefix: mysql</span><br><span class="line">    database.include.list: inventory</span><br><span class="line">    schema.history.internal.kafka.bootstrap.servers: kafka-kafka-bootstrap:9092</span><br><span class="line">    schema.history.internal.kafka.topic: schema-changes.inventory</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h3><h4 id="多库多表同步"><a href="#多库多表同步" class="headerlink" title="多库多表同步"></a><strong>多库多表同步</strong></h4><p>编辑<code>mysql-connect.yaml</code>或者<code>kubectl edit kafkaconnector -n kafka debezium-connector-mysql</code></p><blockquote><p>推荐修改yaml文件，因为edit不会立即更新</p></blockquote><p>示例内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: kafka.strimzi.io/v1beta2</span><br><span class="line">kind: KafkaConnector</span><br><span class="line">metadata:</span><br><span class="line">  name: debezium-connector-mysql</span><br><span class="line">  labels:</span><br><span class="line">    strimzi.io/cluster: debezium-connect-cluster</span><br><span class="line">spec:</span><br><span class="line">  class: io.debezium.connector.mysql.MySqlConnector</span><br><span class="line">  tasksMax: 1</span><br><span class="line">  config:</span><br><span class="line">    tasks.max: 1</span><br><span class="line">    database.hostname: # mysql svc地址，如果不在一个命名空间(比如keycloak命名空间)使用：mysql.keycloak.svc</span><br><span class="line">    database.port: 3306</span><br><span class="line">    database.user: #mysql用户名</span><br><span class="line">    database.password: #mysql密码</span><br><span class="line">    database.server.id: 184054</span><br><span class="line">    topic.prefix: mysql</span><br><span class="line">    database.include.list: testdb,testdb1 # 数据库</span><br><span class="line">    table.include.list: testdb.test_tables,testdb1.test_tables</span><br><span class="line">    schema.history.internal.kafka.bootstrap.servers: debezium-cluster-kafka-bootstrap:9092</span><br><span class="line">    schema.history.internal.kafka.topic: schema-changes.inventory</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 修改以下内容，库与库之间、表于表之间用英文逗号隔开</span><br><span class="line">database.include.list: testdb,testdb1</span><br><span class="line">table.include.list: testdb.test_tables,testdb1.test_tables</span><br></pre></td></tr></table></figure><p>修改后重新应用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f mysql-connect.yaml -n kafka</span><br><span class="line">kubectl apply -f mysql-connect.yaml -n kafka</span><br></pre></td></tr></table></figure><h4 id="验证kafka连接状态（排查时使用）"><a href="#验证kafka连接状态（排查时使用）" class="headerlink" title="验证kafka连接状态（排查时使用）"></a><strong>验证kafka连接状态（排查时使用）</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get kafkaconnect -n kafka</span><br><span class="line"># ready状态为true即可</span><br><span class="line"># 查看详情</span><br><span class="line">kubectl describe kafkaconnect -n kafka</span><br></pre></td></tr></table></figure><h4 id="验证mysql连接状态"><a href="#验证mysql连接状态" class="headerlink" title="验证mysql连接状态"></a><strong>验证mysql连接状态</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get kafkaconnector -n kafka</span><br><span class="line"># ready状态为true即可</span><br><span class="line"># 查看详情</span><br><span class="line">kubectl describe kafkaconnector -n kafka</span><br></pre></td></tr></table></figure><h4 id="查看表更新"><a href="#查看表更新" class="headerlink" title="查看表更新"></a><strong>查看表更新</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动一个pod watcher监控数据表增删改，只作用database.include.list定义的数据库 </span><br><span class="line">kubectl run -n kafka -it --rm --image=quay.io/debezium/tooling:1.2  --restart=Never watcher -- kcat -b kafka-kafka-bootstrap:9092 -C -o beginning -t mysql</span><br><span class="line">​</span><br><span class="line"># kubectl run -n kafka -it --rm --image=harbor.basepoint.net/library/tooling:1.2  --restart=Never watcher -- kcat -b kafka.kafka.svc.cluster.local:9092 -C -o beginning -t mysql</span><br></pre></td></tr></table></figure><h4 id="查看数据更新"><a href="#查看数据更新" class="headerlink" title="查看数据更新"></a><strong>查看数据更新</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动一个pod watcher2监控user表数据增删改</span><br><span class="line">kubectl run -n kafka -it --rm --image=quay.io/debezium/tooling:1.2  --restart=Never watcher2 -- kcat -b kafka-kafka-bootstrap:9092 -C -o beginning -t mysql.testdb.user</span><br><span class="line">​</span><br><span class="line"># kubectl run -n kafka -it --rm --image=harbor.basepoint.net/library/tooling:1.2  --restart=Never watcher2 -- kcat -b kafka.kafka.svc.cluster.local:9092 -C -o beginning -t mysql.testdb.user</span><br></pre></td></tr></table></figure><p><code>如果提示watcher或watcher2 Already exists，需要执行下面命令删除pod</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pod -n kafka watcher --force</span><br><span class="line">kubectl delete pod -n kafka watcher2 --force</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;官方地址：&lt;a href=&quot;https://debezium.io/documentation/reference/2.7/operations/kubernetes.html&quot;&gt;在 Kubernetes 上部署 Debezium ：： Debezium Documenta</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="kafka" scheme="https://sreok.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】使用rook在k8s集群部署ceph（manifest方式）</title>
    <link href="https://sreok.github.io/2024/07/14/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E4%BD%BF%E7%94%A8rook%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ceph%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/07/14/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E4%BD%BF%E7%94%A8rook%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ceph%EF%BC%88manifest%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2024-07-14T12:06:03.000Z</published>
    <updated>2025-06-30T06:55:17.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a><strong>前提条件</strong></h2><ul><li><p>k8s 集群</p></li><li><p>节点挂载空盘用于ceph osd</p></li></ul><p>下载源文件，本文档是1.14.1<a href="https://github.com/rook/rook/archive/refs/tags/v1.14.1.tar.gz"><em>Source code (tar.gz) (</em></a><a href="http://github.com/"><em>github.com</em></a><a href="https://github.com/rook/rook/archive/refs/tags/v1.14.1.tar.gz"><em>)</em></a></p><p><code>解压进入deploy/examples目录，以下操作如果没有说明，都是在examples目录下操作</code></p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a><strong>部署</strong></h2><h3 id="部署operator"><a href="#部署operator" class="headerlink" title="部署operator"></a><strong>部署operator</strong></h3><h5 id="打开自动发现"><a href="#打开自动发现" class="headerlink" title="打开自动发现"></a><strong>打开自动发现</strong></h5><p>修改operator.yaml 中的ROOK_ENABLE_DISCOVERY_DAEMON为true</p><p><img src="/images/image-fsrb.png"></p><h5 id="修改镜像地址"><a href="#修改镜像地址" class="headerlink" title="修改镜像地址"></a><strong>修改镜像地址</strong></h5><p>国内访问不到google地址，使用<code>修改为阿里云地址</code>，我这里使用私有仓库，只要保证可以拉取到即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ROOK_CSI_CEPH_IMAGE: &quot;registry.aliyuncs.com/google_containers/cephcsi:v3.10.2&quot;</span><br><span class="line">ROOK_CSI_REGISTRAR_IMAGE: &quot;registry.aliyuncs.com/google_containers/csi-node-driver-registrar:v2.9.1&quot;</span><br><span class="line">ROOK_CSI_RESIZER_IMAGE: &quot;registry.aliyuncs.com/google_containers/csi-resizer:v1.9.2&quot;</span><br><span class="line">ROOK_CSI_PROVISIONER_IMAGE: &quot;registry.aliyuncs.com/google_containers/csi-provisioner:v3.6.3&quot;</span><br><span class="line">ROOK_CSI_SNAPSHOTTER_IMAGE: &quot;registry.aliyuncs.com/google_containers/csi-snapshotter:v6.3.2&quot;</span><br><span class="line">ROOK_CSI_ATTACHER_IMAGE: &quot;registry.aliyuncs.com/google_containers/csi-attacher:v4.4.2&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/image-hdxy.png"></p><h5 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a><strong>开始部署</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f crds.yaml -f common.yaml -f operator.yaml</span><br></pre></td></tr></table></figure><p>等待所有pod运行</p><p><img src="/images/image-ypep.png"></p><p>如果这是你第一次安装，不需要初始化，否则需要将磁盘清空。<code>谨慎操作!!!</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">DISK=$1</span><br><span class="line">​</span><br><span class="line"># Zap the disk to a fresh, usable state (zap-all is important, b/c MBR has to be clean)</span><br><span class="line">sgdisk --zap-all $DISK</span><br><span class="line">​</span><br><span class="line"># Wipe a large portion of the beginning of the disk to remove more LVM metadata that may be present</span><br><span class="line">dd if=/dev/zero of=&quot;$DISK&quot; bs=1M count=100 oflag=direct,dsync</span><br><span class="line">​</span><br><span class="line"># SSDs may be better cleaned with blkdiscard instead of dd</span><br><span class="line">blkdiscard $DISK</span><br><span class="line">​</span><br><span class="line"># Inform the OS of partition table changes</span><br><span class="line">partprobe $DISK</span><br><span class="line">​</span><br><span class="line"># This command hangs on some systems: with caution, &#x27;dmsetup remove_all --force&#x27; can be used</span><br><span class="line">ls /dev/mapper/ceph-* | xargs -I% -- dmsetup remove % &amp;&gt; /dev/null</span><br><span class="line">​</span><br><span class="line"># ceph-volume setup can leave ceph-&lt;UUID&gt; directories in /dev and /dev/mapper (unnecessary clutter)</span><br><span class="line">rm -rf /dev/ceph-*</span><br><span class="line">rm -rf /dev/mapper/ceph--*</span><br><span class="line">rm -rf /var/lib/rook/</span><br></pre></td></tr></table></figure><p>集群中每个节点都运行以上脚本初始化磁盘</p><p><img src="/images/image-fwwu.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./cleanup.sh /dev/sdx # 将sdb盘清空，并删除ceph遗留文件</span><br></pre></td></tr></table></figure><p><img src="/images/image-jjku.png"></p><h3 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a><strong>部署集群</strong></h3><p>修改cluster.yaml文件中的storage，如果想使用集群中所有的节点上的所有存储，使用默认配置即可</p><p><img src="/images/image-bywk.png"></p><p>同时支持定义指定节点指定磁盘。如下，指定k8s-master01、2、3中的sd开头的磁盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">storage: # cluster level storage configuration and selection</span><br><span class="line">    useAllNodes: false</span><br><span class="line">    useAllDevices: false</span><br><span class="line">    deviceFilter:</span><br><span class="line">    config:</span><br><span class="line">    nodes:</span><br><span class="line">      - name: &quot;k8s-master01&quot;</span><br><span class="line">        deviceFilter: &quot;^sd.&quot;</span><br><span class="line">      - name: &quot;k8s-master02&quot;</span><br><span class="line">        deviceFilter: &quot;^sd.&quot;</span><br><span class="line">      - name: &quot;k8s-master03&quot;</span><br><span class="line">        deviceFilter: &quot;^sd.&quot;</span><br></pre></td></tr></table></figure><p>如果指定单个磁盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">storage: # cluster level storage configuration and selection</span><br><span class="line">    useAllNodes: false</span><br><span class="line">    useAllDevices: false</span><br><span class="line">    config:</span><br><span class="line">    nodes:</span><br><span class="line">      - name: &quot;k8s-master01&quot;</span><br><span class="line">        devices: </span><br><span class="line">          - name: &quot;sdb&quot;</span><br><span class="line">      - name: &quot;k8s-master02&quot;</span><br><span class="line">        devices: </span><br><span class="line">          - name: &quot;sdb&quot;</span><br><span class="line">      - name: &quot;k8s-master03&quot;</span><br><span class="line">        devices: </span><br><span class="line">          - name: &quot;sdb&quot;</span><br></pre></td></tr></table></figure><p>开始部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f cluster.yaml</span><br></pre></td></tr></table></figure><p><img src="/images/image-ibhg.png"></p><p>检查pod状态</p><p><img src="/images/image-dgtq.png"></p><h3 id="部署工具"><a href="#部署工具" class="headerlink" title="部署工具"></a><strong>部署工具</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f toolbox.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it -n rook-ceph rook-ceph-tools-66b77b8df5-b7r22 -- bash</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph -s # 检查状态</span><br></pre></td></tr></table></figure><p><img src="/images/image-epbe.png"></p><h3 id="部署StorageClass并测试"><a href="#部署StorageClass并测试" class="headerlink" title="部署StorageClass并测试"></a><strong>部署StorageClass并测试</strong></h3><h4 id="使用cephfs"><a href="#使用cephfs" class="headerlink" title="使用cephfs"></a>使用cephfs</h4><p>CephFS 共享文件系统（Shared Filesystem）适用于多个Pod之间共享读写（RWX）的存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f filesystem.yaml</span><br></pre></td></tr></table></figure><p>等待文件系统状态ready</p><p><img src="/images/image-lzxv.png"></p><p>部署storageclass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd csi/cephfs</span><br><span class="line">kubectl apply -f storageclass.yaml</span><br></pre></td></tr></table></figure><p>检查状态</p><p><img src="/images/image-ghha.png"></p><h5 id="测试cephfs申请动态pvc"><a href="#测试cephfs申请动态pvc" class="headerlink" title="测试cephfs申请动态pvc"></a><strong>测试cephfs申请动态pvc</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f pvc.yaml</span><br></pre></td></tr></table></figure><p>绑定成功</p><p><img src="/images/image-jout.png"></p><h4 id="使用rbd存储"><a href="#使用rbd存储" class="headerlink" title="使用rbd存储"></a>使用rbd存储</h4><p>块存储（Block）适用于为单个 Pod 提供读写一致性（RWO）的存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd csi/rbd</span><br><span class="line">kubectl apply -f storageclass.yaml</span><br></pre></td></tr></table></figure><p><img src="/images/image-npfr.png"></p><h5 id="测试rbd申请动态pvc"><a href="#测试rbd申请动态pvc" class="headerlink" title="测试rbd申请动态pvc"></a><strong>测试rbd申请动态pvc</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f pvc.yaml</span><br></pre></td></tr></table></figure><p><img src="/images/image-xtii.png"></p><h4 id="使用对象存储"><a href="#使用对象存储" class="headerlink" title="使用对象存储"></a>使用对象存储</h4><p>对象存储（Object）提供了一个可通过内部或外部的Kubernetes集群的S3端点访问的存储</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f object.yaml</span><br></pre></td></tr></table></figure><p>等待状态ready</p><p><img src="/images/image-jnea.png"></p><p>部署storageclass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f storageclass-bucket-delete.yaml</span><br></pre></td></tr></table></figure><p><img src="/images/image-qogf.png"></p><h5 id="测试使用对象存储"><a href="#测试使用对象存储" class="headerlink" title="测试使用对象存储"></a><strong>测试使用对象存储</strong></h5><p>创建OBC对象存储桶</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f object-bucket-claim-delete.yaml</span><br></pre></td></tr></table></figure><p><img src="/images/image-uitq.png"></p><h5 id="安装测试工具s5cmd"><a href="#安装测试工具s5cmd" class="headerlink" title="安装测试工具s5cmd"></a><strong>安装测试工具s5cmd</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/peak/s5cmd/releases/download/v2.2.2/s5cmd_2.2.2_Linux-64bit.tar.gz</span><br><span class="line">tar -xvf s5cmd_2.2.2_Linux-64bit.tar.gz</span><br><span class="line">mv s5cmd /usr/local/bin/</span><br></pre></td></tr></table></figure><h6 id="设置凭证"><a href="#设置凭证" class="headerlink" title="设置凭证"></a>设置凭证</h6><p>可以使用一下命令生成，或者手动获取OBC同名secret，base64解码获取并写到配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">export AWS_ACCESS_KEY_ID=$(kubectl -n default get secret ceph-delete-bucket -o jsonpath=&#x27;&#123;.data.AWS_ACCESS_KEY_ID&#125;&#x27; | base64 --decode)</span><br><span class="line">export AWS_SECRET_ACCESS_KEY=$(kubectl -n default get secret ceph-delete-bucket -o jsonpath=&#x27;&#123;.data.AWS_SECRET_ACCESS_KEY&#125;&#x27; | base64 --decode)</span><br><span class="line"></span><br><span class="line">mkdir ~/.aws</span><br><span class="line">cat &gt; ~/.aws/credentials &lt;&lt; EOF</span><br><span class="line">[default]</span><br><span class="line">aws_access_key_id = $&#123;AWS_ACCESS_KEY_ID&#125;</span><br><span class="line">aws_secret_access_key = $&#123;AWS_SECRET_ACCESS_KEY&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="测试获取桶列表"><a href="#测试获取桶列表" class="headerlink" title="测试获取桶列表"></a><strong>测试获取桶列表</strong></h5><p>列出当前凭据可以访问的所有桶</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc -n rook-ceph</span><br></pre></td></tr></table></figure><p><img src="/images/image-hqgp.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s5cmd --endpoint-url  http://10.107.248.38 ls</span><br></pre></td></tr></table></figure><p><img src="/images/image-wvrs.png"></p><p>桶名称与configmap对应即可。</p><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a><strong>卸载</strong></h2><p>清空ceph的pvc资源（根据环境删除）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete pvc rbd-pvc cephfs-pvc</span><br></pre></td></tr></table></figure><p>删除storageclass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete sc rook-cephfs rook-ceph-block</span><br><span class="line">kubectl delete -f filesystem.yaml # 如果没有部署cephfs就不需要删除</span><br></pre></td></tr></table></figure><p>卸载集群</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f cluster.yaml</span><br><span class="line">或者</span><br><span class="line">kubectl delete cephcluster -n rook-ceph rook-ceph</span><br></pre></td></tr></table></figure><p>卸载工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f toolbox.yaml</span><br></pre></td></tr></table></figure><p>卸载operator</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f crds.yaml -f common.yaml -f operator.yaml</span><br></pre></td></tr></table></figure><p>清理磁盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./cleanup.sh /dev/sdx </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;k8s 集群&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;节点挂载空盘用于ceph</summary>
      
    
    
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
    <category term="ceph" scheme="https://sreok.github.io/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Rocky Linux 9.4 部署高可用Kubernetes v1.30.2</title>
    <link href="https://sreok.github.io/2024/06/16/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Rocky%20Linux%209.4%20%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8Kubernetes%20v1.30.2/"/>
    <id>https://sreok.github.io/2024/06/16/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Rocky%20Linux%209.4%20%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8Kubernetes%20v1.30.2/</id>
    <published>2024-06-16T09:06:03.000Z</published>
    <updated>2025-06-30T08:53:12.805Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a><strong>配置网络</strong></h3><blockquote><p>Rocky 9.4使用NetworkManager管理网络</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/NetworkManager/system-connections/ens5f0.nmconnection</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[connection]</span><br><span class="line">id=ens5f0</span><br><span class="line">uuid=48245c90-e7e7-3e84-8f6d-a1f8cf5cd9e1</span><br><span class="line">type=ethernet</span><br><span class="line">autoconnect-priority=-999</span><br><span class="line">interface-name=ens5f0</span><br><span class="line">​</span><br><span class="line">[ethernet]</span><br><span class="line">cloned-mac-address=random</span><br><span class="line">​</span><br><span class="line">[ipv4]</span><br><span class="line">address1=172.25.2.4/24,172.25.2.1</span><br><span class="line">dns=218.2.2.2;</span><br><span class="line">method=manual</span><br><span class="line">​</span><br><span class="line">[ipv6]</span><br><span class="line">addr-gen-mode=eui64</span><br><span class="line">method=auto</span><br><span class="line">​</span><br><span class="line">[proxy]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 设置时区（所有节点）</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line"># 24小时制</span><br><span class="line">localectl set-locale LC_TIME=en_GB.UTF-8</span><br><span class="line">​</span><br><span class="line">yum install chrony -y</span><br><span class="line">cat &gt; /etc/chrony.conf &lt;&lt; EOF </span><br><span class="line"># 从公网同步</span><br><span class="line">pool ntp.aliyun.com iburst</span><br><span class="line"># 指定使用ntp.aliyun.com作为时间服务器池，iburst选项表示在初始同步时会发送多个请求以加快同步速度</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line"># 当系统时间与服务器时间偏差大于1秒时，会以1秒的步长进行调整。如果偏差超过3秒，则立即进行时间调整</span><br><span class="line">makestep 1.0 3</span><br><span class="line"># 启用硬件时钟同步功能，可以提高时钟的准确性</span><br><span class="line">rtcsync</span><br><span class="line"># 允许10.20.13.0/24网段范围内的主机与chrony进行时间同步</span><br><span class="line">allow 0.0.0.0/24</span><br><span class="line"># 将本地时钟设为stratum 10，stratum值表示时钟的准确度，值越小表示准确度越高</span><br><span class="line">local stratum 10</span><br><span class="line"># 指定使用的密钥文件路径，用于对时间同步进行身份验证</span><br><span class="line">keyfile /etc/chrony.keys</span><br><span class="line"># 指定时区为UTC</span><br><span class="line">leapsectz right/UTC</span><br><span class="line"># 指定日志文件存放目录</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line">EOF</span><br><span class="line">systemctl restart chronyd ; systemctl enable chronyd</span><br><span class="line">​</span><br><span class="line"># 客户端</span><br><span class="line">yum install chrony -y</span><br><span class="line">cat &gt; /etc/chrony.conf &lt;&lt; EOF </span><br><span class="line"># 从服务端同步</span><br><span class="line">pool 172.25.2.4 iburst</span><br><span class="line"># 指定使用ntp.aliyun.com作为时间服务器池，iburst选项表示在初始同步时会发送多个请求以加快同步速度</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line"># 当系统时间与服务器时间偏差大于1秒时，会以1秒的步长进行调整。如果偏差超过3秒，则立即进行时间调整</span><br><span class="line">makestep 1.0 3</span><br><span class="line"># 启用硬件时钟同步功能，可以提高时钟的准确性</span><br><span class="line">rtcsync</span><br><span class="line"># 指定使用的密钥文件路径，用于对时间同步进行身份验证</span><br><span class="line">keyfile /etc/chrony.keys</span><br><span class="line"># 指定时区为UTC</span><br><span class="line">leapsectz right/UTC</span><br><span class="line"># 指定日志文件存放目录</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line">EOF</span><br><span class="line">systemctl restart chronyd ; systemctl enable chronyd</span><br><span class="line">​</span><br><span class="line">#使用客户端进行验证</span><br><span class="line">chronyc sources -v</span><br></pre></td></tr></table></figure><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a><strong>关闭防火墙</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 关闭防火墙</span><br><span class="line">iptables -F &amp;&amp; iptables -t nat -F &amp;&amp; iptables -t mangle -F &amp;&amp; iptables -X &amp;&amp; iptables -P FORWARD ACCEPT</span><br><span class="line">systemctl disable firewalld --now</span><br></pre></td></tr></table></figure><h4 id="禁用SELinux"><a href="#禁用SELinux" class="headerlink" title="禁用SELinux"></a><strong>禁用SELinux</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 禁用selinux</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &#x27;s/^SELINUX=enforcing$/SELINUX=disabled/g&#x27; /etc/selinux/config</span><br></pre></td></tr></table></figure><h4 id="关闭swap"><a href="#关闭swap" class="headerlink" title="关闭swap"></a><strong>关闭swap</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 临时关闭swap</span><br><span class="line">swapoff -a</span><br><span class="line"># 永久关闭swap</span><br><span class="line">sed -i &#x27;s/.*swap.*/#&amp;/g&#x27; /etc/fstab</span><br></pre></td></tr></table></figure><h4 id="安装系统工具"><a href="#安装系统工具" class="headerlink" title="安装系统工具"></a><strong>安装系统工具</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum -y install wget psmisc jq vim net-tools nfs-utils telnet yum-utils device-mapper-persistent-data lvm2 git tar curl</span><br></pre></td></tr></table></figure><h4 id="加载IPVS模块"><a href="#加载IPVS模块" class="headerlink" title="加载IPVS模块"></a><strong>加载IPVS模块</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">yum install ipvsadm ipset sysstat conntrack libseccomp -y</span><br><span class="line">cat &gt; /etc/modules-load.d/k8s.conf &lt;&lt;EOF </span><br><span class="line"># IPVS 是 Linux 内核中的一个模块，用于实现负载均衡和高可用性。它通过在前端代理服务器上分发传入请求到后端实际服务器上，提供了高性能和可扩展的网络服务</span><br><span class="line">ip_vs</span><br><span class="line"># IPVS 轮询调度算法</span><br><span class="line">ip_vs_rr</span><br><span class="line"># IPVS 加权轮询调度算法</span><br><span class="line">ip_vs_wrr</span><br><span class="line"># IPVS 哈希调度算法</span><br><span class="line">ip_vs_sh</span><br><span class="line"># overlay是containerd默认使用的存储驱动，它提供了一种轻量级的、可堆叠的、逐层增量的文件系统,它通过在现有文件系统上叠加文件系统层来创建容器的文件系统视图。每个容器可以有自己的一组文件系统层，这些层可以共享基础镜像中的文件，并在容器内部进行修改。使用overlay可以有效地使用磁盘空间，并使容器更加轻量级</span><br><span class="line">overlay</span><br><span class="line"># nf_conntrack用于跟踪和管理网络连接，包括 TCP、UDP 和 ICMP 等协议。它是实现防火墙状态跟踪的基础</span><br><span class="line">nf_conntrack</span><br><span class="line"># ip_tables提供了对 Linux 系统 IP 数据包过滤和网络地址转换（NAT）功能的支持</span><br><span class="line">ip_tables</span><br><span class="line"># 扩展了 iptables 的功能，支持更高效的 IP 地址集合操作</span><br><span class="line">ip_set</span><br><span class="line"># 扩展了 iptables 的功能，支持更高效的数据包匹配和操作</span><br><span class="line">xt_set</span><br><span class="line"># 用户空间工具，用于配置和管理 xt_set 内核模块</span><br><span class="line">ipt_set</span><br><span class="line"># 用于实现反向路径过滤，用于防止 IP 欺骗和 DDoS 攻击</span><br><span class="line">ipt_rpfilter</span><br><span class="line"># 用于拒绝 IP 数据包，并向发送方发送响应，指示数据包被拒绝</span><br><span class="line">ipt_REJECT</span><br><span class="line"># 用于实现 IP 封装在 IP（IP-over-IP）的隧道功能。它可以在不同网络之间创建虚拟隧道来传输 IP 数据包</span><br><span class="line">ipip</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">systemctl restart systemd-modules-load.service</span><br></pre></td></tr></table></figure><h4 id="配置ulimit"><a href="#配置ulimit" class="headerlink" title="配置ulimit"></a><strong>配置ulimit</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ulimit -SHn 65535</span><br><span class="line">cat &gt; /etc/security/limits.conf &lt;&lt;EOF</span><br><span class="line"># soft表示软限制，nofile表示一个进程可打开的最大文件数，默认值为1024。这里的软限制设置为655360，即一个进程可打开的最大文件数为655360</span><br><span class="line">* soft nofile 655360</span><br><span class="line"># hard表示硬限制，即系统设置的最大值。nofile表示一个进程可打开的最大文件数，默认值为4096。这里的硬限制设置为131072，即系统设置的最大文件数为131072</span><br><span class="line">* hard nofile 131072</span><br><span class="line"># nproc表示一个用户可创建的最大进程数，默认值为30720。即一个用户可创建的最大进程数为655350</span><br><span class="line">* soft nproc 655350</span><br><span class="line"># nproc表示一个用户可创建的最大进程数，默认值为4096。即系统设置的最大进程数为655350</span><br><span class="line">* hard nproc 655350</span><br><span class="line"># memlock表示一个进程可锁定在RAM中的最大内存，默认值为64 KB。这里的软限制设置为unlimited，即一个进程可锁定的最大内存为无限制</span><br><span class="line">* seft memlock unlimited</span><br><span class="line"># memlock表示一个进程可锁定在RAM中的最大内存，默认值为64 KB。即系统设置的最大内存锁定为无限制</span><br><span class="line">* hard memlock unlimitedd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a><strong>修改内核参数</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line"># 启用了IPv4的IP转发功能，允许服务器作为网络路由器转发数据包</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"># 当使用网络桥接技术时，将数据包传递到iptables进行处理</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line"># 当该参数设置为1时，IPv6数据包将被传递到ip6tables进行处理；当该参数设置为0时，IPv6数据包将绕过ip6tables直接传递。默认情况下，这个参数的值是1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line"># 允许在挂载文件系统时，允许被其他进程使用</span><br><span class="line">fs.may_detach_mounts = 1</span><br><span class="line"># 允许原始的内存过量分配策略，当系统的内存已经被完全使用时，系统仍然会分配额外的内存</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line"># 当系统内存不足（OOM）时，禁用系统崩溃和重启</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line"># 设置系统允许一个用户的inotify实例可以监控的文件数目的上限</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line"># 设置系统同时打开的文件数的上限</span><br><span class="line">fs.file-max=52706963</span><br><span class="line"># 设置系统同时打开的文件描述符数的上限</span><br><span class="line">fs.nr_open=52706963</span><br><span class="line"># 设置系统可以创建的网络连接跟踪表项的最大数量</span><br><span class="line">net.netfilter.nf_conntrack_max=2310720</span><br><span class="line"># 设置TCP套接字的空闲超时时间（秒），超过该时间没有活动数据时，内核会发送心跳包</span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line"># 设置未收到响应的TCP心跳探测次数</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line"># 设置TCP心跳探测的时间间隔（秒）</span><br><span class="line">net.ipv4.tcp_keepalive_intvl =15</span><br><span class="line"># 设置系统可以使用的TIME_WAIT套接字的最大数量</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000</span><br><span class="line"># 启用TIME_WAIT套接字的重新利用，允许新的套接字使用旧的TIME_WAIT套接字</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line"># 设置系统可以同时存在的TCP套接字垃圾回收包裹数的最大数量</span><br><span class="line">net.ipv4.tcp_max_orphans = 327680</span><br><span class="line"># 设置系统对于孤立的TCP套接字的重试次数</span><br><span class="line">net.ipv4.tcp_orphan_retries = 3</span><br><span class="line"># 启用TCP SYN cookies保护，用于防止SYN洪泛攻击</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"># 设置新的TCP连接的半连接数（半连接队列）的最大长度</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line"># 设置系统可以创建的网络连接跟踪表项的最大数量</span><br><span class="line">net.ipv4.ip_conntrack_max = 65536</span><br><span class="line"># 关闭TCP时间戳功能，用于提供更好的安全性</span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line"># 设置系统核心层的连接队列的最大值</span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line">​</span><br><span class="line"># 启用IPv6协议</span><br><span class="line">net.ipv6.conf.all.disable_ipv6 = 0</span><br><span class="line"># 启用IPv6协议</span><br><span class="line">net.ipv6.conf.default.disable_ipv6 = 0</span><br><span class="line"># 启用IPv6协议</span><br><span class="line">net.ipv6.conf.lo.disable_ipv6 = 0</span><br><span class="line"># 允许IPv6数据包转发</span><br><span class="line">net.ipv6.conf.all.forwarding = 1</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><h3 id="安装containerd"><a href="#安装containerd" class="headerlink" title="安装containerd"></a><strong>安装containerd</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 安装系统工具</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># 修改阿里源地址</span><br><span class="line">sed -i &#x27;s+download.docker.com+mirrors.aliyun.com/docker-ce+&#x27; /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install containerd</span><br><span class="line">systemctl enable containerd --now</span><br><span class="line">containerd -v</span><br></pre></td></tr></table></figure><h4 id="加载模块"><a href="#加载模块" class="headerlink" title="加载模块"></a><strong>加载模块</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/modules-load.d/containerd.conf &lt;&lt; EOF</span><br><span class="line">overlay</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line">systemctl restart systemd-modules-load</span><br></pre></td></tr></table></figure><h4 id="修改内核参数-1"><a href="#修改内核参数-1" class="headerlink" title="修改内核参数"></a><strong>修改内核参数</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/99-kubernetes-cri.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-iptables  = 1</span><br><span class="line">net.ipv4.ip_forward                 = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a><strong>修改配置文件</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/containerd</span><br><span class="line"># 生成默认配置文件</span><br><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="line"># SystemdCgroup参数的作用是为了确保containerd能够正确地管理容器的资源使用，以实现资源的限制、隔离和公平分配</span><br><span class="line">sed -i &quot;s#SystemdCgroup\ \=\ false#SystemdCgroup\ \=\ true#g&quot; /etc/containerd/config.toml</span><br><span class="line"># 修改镜像拉取地址为国内地址，这里是pause镜像地址</span><br><span class="line">sed -i &quot;s#registry.k8s.io#registry.aliyuncs.com/google_containers#g&quot; /etc/containerd/config.toml</span><br><span class="line"># 指定配置文件目录</span><br><span class="line">sed -i &quot;s#config_path\ \=\ \&quot;\&quot;#config_path\ \=\ \&quot;/etc/containerd/registry\&quot;#g&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &#x27;s/pause:3.6/pause:3.9/g&#x27;  /etc/containerd/config.toml</span><br><span class="line"># 设置镜像加速</span><br><span class="line">mkdir /etc/containerd/registry/docker.io -pv</span><br><span class="line">cat &gt; /etc/containerd/registry/docker.io/hosts.toml &lt;&lt; EOF</span><br><span class="line">server = &quot;https://docker.io&quot;</span><br><span class="line">[host.&quot;https://docker.m.daocloud.io&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">[host.&quot;https://xk9ak4u9.mirror.aliyuncs.com&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;,&quot;resolve&quot;]</span><br><span class="line">[host.&quot;https://dockerproxy.com&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">[host.&quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;,&quot;resolve&quot;]</span><br><span class="line">[host.&quot;https://docker.mirrors.ustc.edu.cn&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;,&quot;resolve&quot;]</span><br><span class="line">[host.&quot;https://docker.nju.edu.cn&quot;] </span><br><span class="line">  capabilities = [&quot;pull&quot;,&quot;resolve&quot;]</span><br><span class="line">[host.&quot;https://registry-1.docker.io&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;,&quot;resolve&quot;,&quot;push&quot;]</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">mkdir /etc/containerd/registry/gcr.io -pv</span><br><span class="line">cat &gt; /etc/containerd/registry/gcr.io/hosts.toml &lt;&lt; EOF</span><br><span class="line">server = &quot;https://gcr.io&quot;</span><br><span class="line">[host.&quot;https://gcr.m.daocloud.io&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">mkdir /etc/containerd/registry/registry.k8s.io -pv</span><br><span class="line">cat &gt; /etc/containerd/registry/registry.k8s.io/hosts.toml &lt;&lt; EOF</span><br><span class="line">server = &quot;https://registry.k8s.io&quot;</span><br><span class="line">[host.&quot;https://k8s.m.daocloud.io&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">mkdir /etc/containerd/registry/k8s.gcr.io -pv</span><br><span class="line">cat &gt; /etc/containerd/registry/k8s.gcr.io/hosts.toml &lt;&lt; EOF</span><br><span class="line">server = &quot;https://k8s.gcr.io&quot;</span><br><span class="line">[host.&quot;https://k8s.m.daocloud.io&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">mkdir /etc/containerd/registry/quay.io -pv</span><br><span class="line">cat &gt; /etc/containerd/registry/quay.io/hosts.toml &lt;&lt; EOF</span><br><span class="line">server = &quot;https://quay.io&quot;</span><br><span class="line">[host.&quot;https://quay.m.daocloud.io&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="启动并设置开机自启"><a href="#启动并设置开机自启" class="headerlink" title="启动并设置开机自启"></a><strong>启动并设置开机自启</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable containerd --now</span><br><span class="line">systemctl restart containerd</span><br><span class="line">systemctl status containerd</span><br></pre></td></tr></table></figure><h4 id="安装crictl"><a href="#安装crictl" class="headerlink" title="安装crictl"></a><strong>安装crictl</strong></h4><p>下载地址：<a href="https://github.com/kubernetes-sigs/cri-tools/releases">Releases · kubernetes-sigs&#x2F;cri-tools (</a><a href="http://github.com/">github.com</a><a href="https://github.com/kubernetes-sigs/cri-tools/releases">)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.30.0/crictl-v1.30.0-linux-amd64.tar.gz</span><br><span class="line">tar -zxf crictl-v1.30.0-linux-amd64.tar.gz </span><br><span class="line">mv crictl /usr/local/bin/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/crictl.yaml &lt;&lt;EOF</span><br><span class="line">runtime-endpoint: unix:///var/run/containerd/containerd.sock</span><br><span class="line">image-endpoint: unix:///var/run/containerd/containerd.sock</span><br><span class="line">timeout: 10</span><br><span class="line">debug: false</span><br><span class="line">pull-image-on-create: false</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="安装Kube-vip"><a href="#安装Kube-vip" class="headerlink" title="安装Kube-vip"></a><strong>安装Kube-vip</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 设置vip，前提先ping一下，确保IP没有被占用</span><br><span class="line">export VIP=172.25.2.50</span><br><span class="line"># 指定网卡</span><br><span class="line">export INTERFACE=ens5f0</span><br><span class="line"># 获取最新版本</span><br><span class="line"># KVVERSION=$(curl -sL https://api.github.com/repos/kube-vip/kube-vip/releases | jq -r &quot;.[0].name&quot;)</span><br><span class="line"># 或者指定版本（这个版本目前比较稳定，不会出现报错）</span><br><span class="line">export KVVERSION=v0.6.4</span><br><span class="line"># 安装kube-vip镜像</span><br><span class="line"># ctr image pull ghcr.io/kube-vip/kube-vip:$KVVERSION; </span><br><span class="line">alias kube-vip=&quot;ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:$KVVERSION vip /kube-vip&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 生成清单文件</span><br><span class="line">mkdir -p /etc/kubernetes/manifests</span><br><span class="line">​</span><br><span class="line">kube-vip manifest pod \</span><br><span class="line">    --interface $INTERFACE \</span><br><span class="line">    --address $VIP \</span><br><span class="line">    --controlplane \</span><br><span class="line">    --services \</span><br><span class="line">    --arp \</span><br><span class="line">    --leaderElection | tee /etc/kubernetes/manifests/kube-vip.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 1.29版本以后需要对kube-vip修改kubernetes客户端路径</span><br><span class="line">sed -i &#x27;s#path: /etc/kubernetes/admin.conf#path: /etc/kubernetes/super-admin.conf#&#x27; \</span><br><span class="line">          /etc/kubernetes/manifests/kube-vip.yaml</span><br></pre></td></tr></table></figure><h3 id="安装k8s工具"><a href="#安装k8s工具" class="headerlink" title="安装k8s工具"></a><strong>安装k8s工具</strong></h3><p>版本查看：<a href="https://mirrors.aliyun.com/kubernetes-new/core/stable/">kubernetes-new-core-stable安装包下载_开源镜像站-阿里云 (</a><a href="http://aliyun.com/">aliyun.com</a><a href="https://mirrors.aliyun.com/kubernetes-new/core/stable/">)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 指定安装的k8s工具版本</span><br><span class="line">export k8sVersion=v1.30</span><br><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes-new/core/stable/$k8sVersion/rpm/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes-new/core/stable/$k8sVersion/rpm/repodata/repomd.xml.key</span><br><span class="line">EOF</span><br><span class="line">yum install -y kubelet kubeadm kubectl</span><br><span class="line">systemctl enable kubelet --now</span><br></pre></td></tr></table></figure><h3 id="初始化k8s"><a href="#初始化k8s" class="headerlink" title="初始化k8s"></a><strong>初始化k8s</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubeadm.yml &lt;&lt; EOF</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 172.25.2.4 # 修改自己的ip</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: unix:///var/run/containerd/containerd.sock</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  name: k8s-h3c-master01 # 本机的主机名</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/k8s-master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  certSANs:</span><br><span class="line">  - 127.0.0.1</span><br><span class="line">  - 172.25.2.50 # vip</span><br><span class="line">  - 172.25.2.4 # master01</span><br><span class="line">  - 172.25.2.5 # master02</span><br><span class="line">  - 172.25.2.6 # master03</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line"># 控制平面高可用入口，所有的高可用操作，最终都是为了这个位置的ip</span><br><span class="line">controlPlaneEndpoint: 172.25.2.50:6443</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.30.2</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 配置ipvs</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">mode: ipvs</span><br><span class="line">---</span><br><span class="line"># 指定cgroup为systemd</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看所需镜像列表</span><br><span class="line">kubeadm config images list --config kubeadm.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 预拉取镜像</span><br><span class="line">kubeadm config images pull --config kubeadm.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 初始化</span><br><span class="line">kubeadm init --config=kubeadm.yml --upload-certs</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 配置 kubectl</span><br><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h4 id="安装命令自动补齐"><a href="#安装命令自动补齐" class="headerlink" title="安装命令自动补齐"></a><strong>安装命令自动补齐</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install bash-completion -y</span><br><span class="line">source /usr/share/bash-completion/bash_completion</span><br><span class="line">source &lt;(kubectl completion bash)</span><br><span class="line">echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="新增工作节点"><a href="#新增工作节点" class="headerlink" title="新增工作节点"></a><strong>新增工作节点</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成加入节点命令</span><br><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><h4 id="新增控制节点"><a href="#新增控制节点" class="headerlink" title="新增控制节点"></a><strong>新增控制节点</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 生成加入节点命令</span><br><span class="line">kubeadm token create --print-join-command</span><br><span class="line"># 生成控制节点certificate-key </span><br><span class="line">kubeadm init phase upload-certs --upload-certs</span><br></pre></td></tr></table></figure><p>通过<code>--control-plane --certificate-key</code>拼接命令</p><blockquote><p>kubeadm join 10.20.13.100:6443 –token abcdef.0123456789abcdef –discovery-token-ca-cert-hash sha256:xxxxxxxxxxxxxx <strong>–control-plane –certificate-key</strong> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</p></blockquote><h3 id="安装CNI网络插件"><a href="#安装CNI网络插件" class="headerlink" title="安装CNI网络插件"></a><strong>安装CNI网络插件</strong></h3><p>Calico：<a href="https://sreok.cn/archives/b72d4657-a17a-4209-a4fd-b631e7d06422">CNI插件-使用calico支持IPv4&#x2F;IPv6双协议栈 - (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/b72d4657-a17a-4209-a4fd-b631e7d06422">)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;配置网络&quot;&gt;&lt;a href=&quot;#配置网络&quot; class=&quot;headerlink&quot; title=&quot;配置网络&quot;&gt;&lt;/a&gt;&lt;strong&gt;配置网络&lt;/strong&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Rocky 9.4使用NetworkManager管理网络&lt;/p</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="etcd" scheme="https://sreok.github.io/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】Kubernetes v1.30 高可用集群支持IPv4IPv6双栈（kubeadm方式）</title>
    <link href="https://sreok.github.io/2024/06/10/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%20v1.30%20%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%94%AF%E6%8C%81IPv4IPv6%E5%8F%8C%E6%A0%88%EF%BC%88kubeadm%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>https://sreok.github.io/2024/06/10/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%20v1.30%20%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%94%AF%E6%8C%81IPv4IPv6%E5%8F%8C%E6%A0%88%EF%BC%88kubeadm%E6%96%B9%E5%BC%8F%EF%BC%89/</id>
    <published>2024-06-10T09:06:03.000Z</published>
    <updated>2025-06-30T09:54:56.957Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、初始化系统"><a href="#1、初始化系统" class="headerlink" title="1、初始化系统"></a>1、初始化系统</h3><p>原文地址：<a href="http://localhost:4000/2022/05/14/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91k8s%E8%8A%82%E7%82%B9%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E5%8C%96+%E5%86%85%E6%A0%B8%E4%BC%98%E5%8C%96/">【云原生】k8s节点系统初始化+内核优化 - (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/942c699f-2ad0-428e-809c-9957a2e331ce">)</a></p><h3 id="2、安装容器运行时"><a href="#2、安装容器运行时" class="headerlink" title="2、安装容器运行时"></a><strong>2、安装容器运行时</strong></h3><p>containerd原文地址：<a href="http://localhost:4000/2023/05/12/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91%E4%BD%BF%E7%94%A8Containerd%E4%BD%9C%E4%B8%BAKubernetes%20Runtime/">【笔记】使用Containerd作为Kubernetes Runtime - (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/4896568f-2a8e-4a1d-bad6-de894920131d">)</a></p><p>docker原文地址：<a href="http://localhost:4000/2023/05/12/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91%E4%BD%BF%E7%94%A8Docker%E4%BD%9C%E4%B8%BAKubernetes%20Runtime/">【笔记】使用Docker作为Kubernetes Runtime - (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/8da2f508-f580-4a8d-9b51-55856a2f7b16">)</a></p><h3 id="3、安装k8s工具"><a href="#3、安装k8s工具" class="headerlink" title="3、安装k8s工具"></a><strong>3、安装k8s工具</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 指定安装的k8s工具版本，版本查看：https://mirrors.aliyun.com/kubernetes-new/core/stable/</span><br><span class="line">export k8sVersion=v1.30</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes-new/core/stable/$k8sVersion/rpm/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes-new/core/stable/$k8sVersion/rpm/repodata/repomd.xml.key</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y kubelet kubeadm kubectl</span><br><span class="line">systemctl enable kubelet --now</span><br></pre></td></tr></table></figure><h3 id="4、高可用负载入口"><a href="#4、高可用负载入口" class="headerlink" title="4、高可用负载入口"></a><strong>4、高可用负载入口</strong></h3><p><code>单主集群跳过此步骤</code></p><p><strong>方式一： kube-vip</strong></p><p>原文地址：<a href="http://localhost:4000/2023/11/23/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E9%AB%98%E5%8F%AF%E7%94%A8%E8%B4%9F%E8%BD%BD%E6%96%B9%E6%A1%88%EF%BC%9A%E4%BD%BF%E7%94%A8kube-vip%E4%BD%9C%E4%B8%BA%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2%E8%B4%9F%E8%BD%BD%E5%85%A5%E5%8F%A3/">【云原生】高可用负载方案：使用kube-vip作为控制平面负载入口 - (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/9d06c7be-1885-4df7-bfbf-b80ed16e4d47">)</a></p><p><strong>方式二：Keepalived + HAProxy</strong></p><p>原文地址：<a href="http://localhost:4000/2023/11/12/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E9%AB%98%E5%8F%AF%E7%94%A8%E8%B4%9F%E8%BD%BD%E6%96%B9%E6%A1%88%EF%BC%9A%E4%BD%BF%E7%94%A8Keepalived%20+%20HAProxy%E4%BD%9C%E4%B8%BA%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2%E8%B4%9F%E8%BD%BD%E5%85%A5%E5%8F%A3/">【云原生】高可用负载方案：使用Keepalived + HAProxy作为控制平面负载入口 - (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/642868c1-f000-4476-85ad-cbeaf9e53fd4">)</a></p><h3 id="5、初始化集群"><a href="#5、初始化集群" class="headerlink" title="5、初始化集群"></a><strong>5、初始化集群</strong></h3><h4 id="可选一：单节点-不支持ipv6双协议栈"><a href="#可选一：单节点-不支持ipv6双协议栈" class="headerlink" title="可选一：单节点-不支持ipv6双协议栈"></a>可选一：单节点-<strong>不支持ipv6双协议栈</strong></h4><p><code>不支持新增控制平面，因为控制平面的IP已经固定</code></p><p><code>仅支持外部解析ipv4地址访问业务</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubeadm.yml &lt;&lt; EOF</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.20.13.10 # 修改自己的ip</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: unix:///var/run/containerd/containerd.sock</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  name: k8s-master01 # 本机的主机名</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/k8s-master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line"># 控制平面高可用入口，所有的高可用操作，最终都是为了这个位置的ip</span><br><span class="line"># controlPlaneEndpoint: 10.20.13.100:6443</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.30.0 # 版本必须与kubeadm版本一致</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 配置ipvs</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">mode: ipvs</span><br><span class="line">---</span><br><span class="line"># 指定cgroup为systemd</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="可选二：单节点-支持ipv4-ipv6双协议栈"><a href="#可选二：单节点-支持ipv4-ipv6双协议栈" class="headerlink" title="可选二：单节点-支持ipv4&#x2F;ipv6双协议栈"></a>可选二：单节点-支持ipv4&#x2F;ipv6双协议栈</h4><p><code>不支持新增控制平面，因为控制平面的IP已经固定</code></p><p><code>支持外部解析ipv4/ipv6地址访问业务</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubeadm.yml &lt;&lt; EOF</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.20.13.10 # 修改自己的ip</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: unix:///var/run/containerd/containerd.sock</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  kubeletExtraArgs:</span><br><span class="line">    # 这里使用maser01的IP </span><br><span class="line">    node-ip: 10.20.13.10,2031:0:130c::10</span><br><span class="line">  name: k8s-master01 # 本机的主机名</span><br><span class="line">  taints:</span><br><span class="line">  - effect: PreferNoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/k8s-master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line"># 控制平面高可用入口，所有的高可用操作，最终都是为了这个位置的ip</span><br><span class="line"># controlPlaneEndpoint: 10.20.13.100:6443</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.30.0 # 版本必须与kubeadm版本一致</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16,2000::/64</span><br><span class="line">  serviceSubnet: 10.96.0.0/12,3000::/112</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 配置ipvs</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">mode: ipvs</span><br><span class="line">---</span><br><span class="line"># 指定cgroup为systemd</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="可选三：高可用-不支持ipv6双协议栈"><a href="#可选三：高可用-不支持ipv6双协议栈" class="headerlink" title="可选三：高可用-不支持ipv6双协议栈"></a><strong>可选三：高可用-不支持ipv6双协议栈</strong></h4><p><code>支持新增控制平面，api-server通过负载ip访问，控制平面高可用</code></p><p><code>仅支持外部解析ipv4地址访问业务</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm config print init-defaults &gt; kubeadm.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubeadm.yml &lt;&lt; EOF</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.20.13.10 # 修改自己的ip</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: unix:///var/run/containerd/containerd.sock</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  name: k8s-master01 # 本机的主机名</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/k8s-master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  certSANs:</span><br><span class="line">  - 127.0.0.1</span><br><span class="line">  - 10.20.13.100 # vip</span><br><span class="line">  - 10.20.13.10 # master01</span><br><span class="line">  - 10.20.13.11 # master02</span><br><span class="line">  - 10.20.13.12 # master03</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line"># 控制平面高可用入口，所有的高可用操作，最终都是为了这个位置的ip</span><br><span class="line">controlPlaneEndpoint: 10.20.13.100:6443</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.30.0 # 版本必须与kubeadm版本一致</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 配置ipvs</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">mode: ipvs</span><br><span class="line">---</span><br><span class="line"># 指定cgroup为systemd</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config=kubeadm.yml --upload-certs</span><br></pre></td></tr></table></figure><h4 id="可选四：高可用-支持ipv4-ipv6双协议栈"><a href="#可选四：高可用-支持ipv4-ipv6双协议栈" class="headerlink" title="**可选四：高可用-**支持ipv4&#x2F;ipv6双协议栈"></a>**可选四：高可用-**支持ipv4&#x2F;ipv6双协议栈</h4><p><code>支持新增控制平面，api-server通过负载ip访问，控制平面高可用</code></p><p><code>支持外部解析ipv4/ipv6地址访问业务</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; kubeadm.yml &lt;&lt; EOF</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.20.13.10 # 修改自己的ip</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: unix:///var/run/containerd/containerd.sock</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  kubeletExtraArgs:</span><br><span class="line">    # 这里使用maser01的IP </span><br><span class="line">    node-ip: 10.20.13.10,2031:0:130c::10</span><br><span class="line">  name: k8s-master01 # 本机的主机名</span><br><span class="line">  taints:</span><br><span class="line">  - effect: PreferNoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/k8s-master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  certSANs:</span><br><span class="line">  - 127.0.0.1</span><br><span class="line">  - 10.20.13.100 # vip</span><br><span class="line">  - 10.20.13.10 # master01</span><br><span class="line">  - 10.20.13.11 # master02</span><br><span class="line">  - 10.20.13.12 # master03</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line"># 控制平面高可用入口，所有的高可用操作，最终都是为了这个位置的ip</span><br><span class="line">controlPlaneEndpoint: 10.20.13.100:6443</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.30.0 # 版本必须与kubeadm版本一致</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16,2000::/64</span><br><span class="line">  serviceSubnet: 10.96.0.0/12,3000::/112</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 配置ipvs</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">mode: ipvs</span><br><span class="line">---</span><br><span class="line"># 指定cgroup为systemd</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">cgroupDriver: systemd</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config=kubeadm.yml --upload-certs</span><br></pre></td></tr></table></figure><blockquote><p>需要注意：上面无论是单节点还是高可用，初始化后都是单节点，高可用可以在后面操作新增控制节点。</p></blockquote><h4 id="配置命令行"><a href="#配置命令行" class="headerlink" title="配置命令行"></a>配置命令行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h4 id="新增工作节点"><a href="#新增工作节点" class="headerlink" title="新增工作节点"></a>新增工作节点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成加入节点命令</span><br><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><h4 id="新增控制节点"><a href="#新增控制节点" class="headerlink" title="新增控制节点"></a>新增控制节点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成加入节点命令</span><br><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成控制节点certificate-key </span><br><span class="line">kubeadm init phase upload-certs --upload-certs</span><br></pre></td></tr></table></figure><p>通过<code>--control-plane --certificate-key</code>拼接命令</p><blockquote><p>kubeadm join 10.20.13.100:6443 –token abcdef.0123456789abcdef –discovery-token-ca-cert-hash sha256:xxxxxxxxxxxxxx <strong>–control-plane –certificate-key</strong> xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</p></blockquote><h4 id="安装命令自动补齐"><a href="#安装命令自动补齐" class="headerlink" title="安装命令自动补齐"></a>安装命令自动补齐</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install bash-completion -y</span><br><span class="line">source /usr/share/bash-completion/bash_completion</span><br><span class="line">source &lt;(kubectl completion bash)</span><br><span class="line">echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="6、安装CNI插件"><a href="#6、安装CNI插件" class="headerlink" title="6、安装CNI插件"></a>6、安装CNI插件</h3><p>原文地址：<a href="http://localhost:4000/2022/05/16/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91Kubernetes%20%E5%AE%89%E8%A3%85CNI%E6%8F%92%E4%BB%B6calico%E5%B9%B6%E8%AE%BE%E7%BD%AE%E5%8F%8C%E5%8D%8F%E8%AE%AE%E6%A0%88/">【云原生】Kubernetes 安装CNI插件calico并设置双协议栈- (</a><a href="http://sreok.cn/">sreok.cn</a><a href="https://sreok.cn/archives/b72d4657-a17a-4209-a4fd-b631e7d06422">)</a></p><h3 id="卸载集群"><a href="#卸载集群" class="headerlink" title="卸载集群"></a><strong>卸载集群</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubeadm reset -f</span><br><span class="line">rm -rf /etc/kubernetes/</span><br><span class="line">rm -rf /var/lib/kubelet/</span><br><span class="line">rm -rf /var/lib/etcd/</span><br><span class="line">rm -rf $HOME/.kube/</span><br><span class="line">rm -rf /opt/cni/</span><br><span class="line">rm -rf /etc/cni/net.d/</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、初始化系统&quot;&gt;&lt;a href=&quot;#1、初始化系统&quot; class=&quot;headerlink&quot; title=&quot;1、初始化系统&quot;&gt;&lt;/a&gt;1、初始化系统&lt;/h3&gt;&lt;p&gt;原文地址：&lt;a href=&quot;http://localhost:4000/2022/05/14/%E3</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="Kubernetes" scheme="https://sreok.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】使用trust-manager将TLS证书同步到其他命名空间</title>
    <link href="https://sreok.github.io/2024/05/13/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E4%BD%BF%E7%94%A8trust-manager%E5%B0%86TLS%E8%AF%81%E4%B9%A6%E5%90%8C%E6%AD%A5%E5%88%B0%E5%85%B6%E4%BB%96%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
    <id>https://sreok.github.io/2024/05/13/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E4%BD%BF%E7%94%A8trust-manager%E5%B0%86TLS%E8%AF%81%E4%B9%A6%E5%90%8C%E6%AD%A5%E5%88%B0%E5%85%B6%E4%BB%96%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</id>
    <published>2024-05-13T09:06:03.000Z</published>
    <updated>2025-06-30T08:32:30.665Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">helm repo add jetstack https://charts.jetstack.io --force-update</span><br><span class="line">helm upgrade --install trust-manager jetstack/trust-manager \</span><br><span class="line">--namespace cert-manager \</span><br><span class="line">--set secretTargets.enabled=true \</span><br><span class="line">--set secretTargets.authorizedSecretsAll=true \</span><br><span class="line">--set app.trust.namespace=cert-manager</span><br></pre></td></tr></table></figure><h3 id="创建Bundle"><a href="#创建Bundle" class="headerlink" title="创建Bundle"></a><strong>创建Bundle</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; harbor-tls.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: trust.cert-manager.io/v1alpha1</span><br><span class="line">kind: Bundle</span><br><span class="line">metadata:</span><br><span class="line">  # bundle名称被用为target secret名称</span><br><span class="line">  name: harbor-tls</span><br><span class="line">spec:</span><br><span class="line">  sources:</span><br><span class="line">  # 基于secret同步，secret必须存在于cert-manager命名空间（bundle是全局资源，不能通过设置namaespace来使用其他命名空间的secret）</span><br><span class="line">  - secret:</span><br><span class="line">      name: &quot;devops-selfsigned-secret&quot;</span><br><span class="line">      key: &quot;ca.crt&quot;</span><br><span class="line">  target:</span><br><span class="line">    # 目标是secret，安装时必须开启secretTargets.enabled和secretTargets.authorizedSecretsAll</span><br><span class="line">    secret:</span><br><span class="line">      key: &quot;ca.crt&quot;</span><br><span class="line">    # label存在的命名空间才创建secret，删除以下内容，即在所有命名空间创建secret</span><br><span class="line">    namespaceSelector:</span><br><span class="line">      matchLabels:</span><br><span class="line">        devops: &quot;yes&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f harbor-tls.yaml</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a><strong>验证</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-h3c-master01 harbor]# kubectl get bundles.trust.cert-manager.io</span><br><span class="line">NAME         CONFIGMAP TARGET   SECRET TARGET   SYNCED   REASON   AGE</span><br><span class="line">harbor-tls                      ca.crt          True     Synced   39s</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-h3c-master01 harbor]# kubectl get namespaces --show-labels</span><br><span class="line">NAME              STATUS   AGE     LABELS</span><br><span class="line">cert-manager      Active   4d2h    kubernetes.io/metadata.name=cert-manager</span><br><span class="line">default           Active   7d12h   kubernetes.io/metadata.name=default</span><br><span class="line">devops            Active   4d7h    devops=yes,kubernetes.io/metadata.name=devops</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-h3c-master01 harbor]# kubectl get secrets -n devops</span><br><span class="line">NAME                                      TYPE                 DATA   AGE</span><br><span class="line">harbor-tls                                Opaque               1      42s</span><br></pre></td></tr></table></figure><h4 id="查看ca-crt"><a href="#查看ca-crt" class="headerlink" title="查看ca.crt"></a><strong>查看ca.crt</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secrets -n cert-manager devops-selfsigned-secret  -o yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secrets -n devops harbor-tls -o yaml</span><br></pre></td></tr></table></figure><p>验证以上secret中的ca.crt内容是否一致</p><h3 id="示例：（将cert-manager生成的harborTLS证书同步给全局）"><a href="#示例：（将cert-manager生成的harborTLS证书同步给全局）" class="headerlink" title="示例：（将cert-manager生成的harborTLS证书同步给全局）"></a>示例：（将cert-manager生成的harborTLS证书同步给全局）</h3><p>安装trust-manager时指定trust命名空间到TLS证书所在命名空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">helm upgrade --install trust-manager jetstack/trust-manager \</span><br><span class="line">--namespace cert-manager \</span><br><span class="line">--set secretTargets.enabled=true \</span><br><span class="line">--set secretTargets.authorizedSecretsAll=true \</span><br><span class="line">--set app.trust.namespace=devops</span><br></pre></td></tr></table></figure><h4 id="创建bundle"><a href="#创建bundle" class="headerlink" title="创建bundle"></a>创建bundle</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: trust.cert-manager.io/v1alpha1</span><br><span class="line">kind: Bundle</span><br><span class="line">metadata:</span><br><span class="line">  name: harbor-tls</span><br><span class="line">spec:</span><br><span class="line">  sources:</span><br><span class="line">  - secret:</span><br><span class="line">      name: &quot;harbor-selfsigned-secret&quot;</span><br><span class="line">      key: &quot;ca.crt&quot;</span><br><span class="line">  target:</span><br><span class="line">    configMap:</span><br><span class="line">      key: &quot;ca.crt&quot;</span><br></pre></td></tr></table></figure><h4 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master01 ~]# kubectl get bundles.trust.cert-manager.io</span><br><span class="line">NAME         CONFIGMAP TARGET   SECRET TARGET   SYNCED   REASON   AGE</span><br><span class="line">harbor-tls   ca.crt                             True     Synced   3m18s</span><br><span class="line"></span><br><span class="line"># 所有命名空间下都有这个configMap</span><br><span class="line">[root@k8s-master01 ~ ]# kubectl get cm</span><br><span class="line">NAME               DATA   AGE</span><br><span class="line">harbor-tls         1      2m16s</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a><strong>卸载</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">helm uninstall trust-manager -n cert-manager</span><br><span class="line">kubectl delete crd bundles.trust.cert-manager.io</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="trust-manager" scheme="https://sreok.github.io/tags/trust-manager/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】使用cert-manager 生成自签名证书</title>
    <link href="https://sreok.github.io/2024/05/07/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E4%BD%BF%E7%94%A8cert-manager%20%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>https://sreok.github.io/2024/05/07/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E4%BD%BF%E7%94%A8cert-manager%20%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</id>
    <published>2024-05-07T09:06:03.000Z</published>
    <updated>2025-06-30T08:30:54.270Z</updated>
    
    <content type="html"><![CDATA[<p><code>自签名证书一般用于服务间或内网访问使用，在公网访问会有不安全提示。</code></p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a><strong>前提条件</strong></h2><ul><li><p>k8s集群&lt;1.19</p></li><li><p>cert-manager</p></li><li><p>ingress-nginx</p></li></ul><h2 id="方式一：使用自签名作为根证书（简单明了）"><a href="#方式一：使用自签名作为根证书（简单明了）" class="headerlink" title="方式一：使用自签名作为根证书（简单明了）"></a>方式一：使用自签名作为根证书（简单明了）</h2><h3 id="创建ClusterIssuer"><a href="#创建ClusterIssuer" class="headerlink" title="创建ClusterIssuer"></a><strong>创建ClusterIssuer</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: ClusterIssuer</span><br><span class="line">metadata:</span><br><span class="line">   name: selfsigned</span><br><span class="line">spec:</span><br><span class="line">   selfSigned: &#123;&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/image-fmvw.png"></p><h3 id="创建证书"><a href="#创建证书" class="headerlink" title="创建证书"></a><strong>创建证书</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: Certificate</span><br><span class="line">metadata:</span><br><span class="line">  name: selfsigned-test</span><br><span class="line">  namespace: devops</span><br><span class="line">  #namespace: cert-manager</span><br><span class="line">spec:</span><br><span class="line">  isCA: false</span><br><span class="line">  dnsNames: # dns列表</span><br><span class="line">  - sreok.cn</span><br><span class="line">  commonName: &quot;*.sreok.cn&quot;</span><br><span class="line">  secretName: selfsigned-cert-tls</span><br><span class="line">  duration: 876000h</span><br><span class="line">  renewBefore: 8760h</span><br><span class="line">  subject:</span><br><span class="line">    countries:</span><br><span class="line">    - China</span><br><span class="line">    localities:</span><br><span class="line">    - NanJing</span><br><span class="line">    organizations:</span><br><span class="line">    - sreok</span><br><span class="line">    organizationalUnits:</span><br><span class="line">    - devops</span><br><span class="line">  privateKey:</span><br><span class="line">    algorithm: ECDSA</span><br><span class="line">    size: 256</span><br><span class="line">  issuerRef:</span><br><span class="line">    name: selfsigned # 与clusterissusr对应</span><br><span class="line">    kind: ClusterIssuer</span><br><span class="line">    group: cert-manager.io</span><br></pre></td></tr></table></figure><p>检查证书状态，True即可使用</p><p><img src="/images/image-gsha.png"></p><h3 id="ingress配置"><a href="#ingress配置" class="headerlink" title="ingress配置"></a><strong>ingress配置</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: demo-ingress</span><br><span class="line">  annotations:</span><br><span class="line">    nginx.ingress.kubernetes.io/force-ssl-redirect: &quot;true&quot;</span><br><span class="line">    cert-manager.io/cluster-issuer: selfsigned</span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: nginx</span><br><span class="line">  tls:</span><br><span class="line">    - secretName: selfsigned-test # 证书名,与certificate一致</span><br><span class="line">      hosts:</span><br><span class="line">        - example.com # 证书域名</span><br><span class="line">  rules:</span><br><span class="line">    - host: example.com # 访问域名</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">          - path: /</span><br><span class="line">            #pathType: ImplementationSpecific</span><br><span class="line">            pathType: Prefix</span><br><span class="line">            backend:</span><br><span class="line">              service:</span><br><span class="line">                name: demo # 服务名</span><br><span class="line">                port:</span><br><span class="line">                  number: 80 # 服务的端口号 service port，非pod port</span><br></pre></td></tr></table></figure><p><img src="/images/image-honq.png"></p><h2 id="方式二：使用CA生成链式证书（复杂、安全）"><a href="#方式二：使用CA生成链式证书（复杂、安全）" class="headerlink" title="方式二：使用CA生成链式证书（复杂、安全）"></a>方式二：使用CA生成链式证书（复杂、安全）</h2><h3 id="创建根证书"><a href="#创建根证书" class="headerlink" title="创建根证书"></a>创建根证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 创建根证书</span><br><span class="line">---</span><br><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: ClusterIssuer</span><br><span class="line">metadata:</span><br><span class="line">  name: selfsigned</span><br><span class="line">spec:</span><br><span class="line">  selfSigned: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 创建CA</span><br><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: Certificate</span><br><span class="line">metadata:</span><br><span class="line">  name: devops-ca</span><br><span class="line">  # 如果要根据此CA创建ClusterIssuer（集群范围）必须在cert-manager命名空间</span><br><span class="line">  namespace: cert-manager</span><br><span class="line">spec:</span><br><span class="line">  isCA: true</span><br><span class="line">  commonName: &quot;*.sreok.cn&quot;</span><br><span class="line">  secretName: devops-selfsigned-secret</span><br><span class="line">  # 100年</span><br><span class="line">  duration: 876000h</span><br><span class="line">  # 1年时更新</span><br><span class="line">  renewBefore: 8760h</span><br><span class="line">  # 证书信息</span><br><span class="line">  subject:</span><br><span class="line">    countries:</span><br><span class="line">    - China</span><br><span class="line">    localities:</span><br><span class="line">    - NanJing</span><br><span class="line">    organizations:</span><br><span class="line">    - sreok</span><br><span class="line">    organizationalUnits:</span><br><span class="line">    - devops</span><br><span class="line">  privateKey:</span><br><span class="line">    algorithm: ECDSA</span><br><span class="line">    size: 256</span><br><span class="line">  issuerRef:</span><br><span class="line">    name: selfsigned</span><br><span class="line">    kind: ClusterIssuer</span><br><span class="line">    group: cert-manager.io</span><br></pre></td></tr></table></figure><h3 id="颁发CA证书"><a href="#颁发CA证书" class="headerlink" title="颁发CA证书"></a>颁发CA证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 基于CA创建ClusterIssuer</span><br><span class="line">---</span><br><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: ClusterIssuer</span><br><span class="line">metadata:</span><br><span class="line">  name: devops-issuer</span><br><span class="line">spec:</span><br><span class="line">  ca:</span><br><span class="line">    secretName: devops-selfsigned-secret</span><br></pre></td></tr></table></figure><h3 id="基于CA颁发TLS证书"><a href="#基于CA颁发TLS证书" class="headerlink" title="基于CA颁发TLS证书"></a>基于CA颁发TLS证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: Certificate</span><br><span class="line">metadata:</span><br><span class="line">  name: selfsigned-tls</span><br><span class="line">  # ingress在哪个命名空间就写哪个</span><br><span class="line">  namespace: devops</span><br><span class="line">spec:</span><br><span class="line">  # TLS证书需要禁止CA</span><br><span class="line">  isCA: false</span><br><span class="line">  usages:</span><br><span class="line">    - server auth</span><br><span class="line">    - client auth</span><br><span class="line">  # dns必须设置</span><br><span class="line">  dnsNames:</span><br><span class="line">  - abc.sreok.cn</span><br><span class="line">  # 名称需要和域名对应或包含域名</span><br><span class="line">  commonName: &quot;*.sreok.cn&quot;</span><br><span class="line">  # 最终TLS证书</span><br><span class="line">  secretName: selfsigned-cert-tls</span><br><span class="line">  # 100年有效期</span><br><span class="line">  duration: 876000h</span><br><span class="line">  # 有效期剩1年时更新</span><br><span class="line">  renewBefore: 8760h</span><br><span class="line">  # 证书信息</span><br><span class="line">  subject:</span><br><span class="line">    countries:</span><br><span class="line">    - China</span><br><span class="line">    localities:</span><br><span class="line">    - NanJing</span><br><span class="line">    organizations:</span><br><span class="line">    - sreok</span><br><span class="line">    organizationalUnits:</span><br><span class="line">    - harbor</span><br><span class="line">  privateKey:</span><br><span class="line">    algorithm: ECDSA</span><br><span class="line">    size: 256</span><br><span class="line">  # issuer绑定到CA证书</span><br><span class="line">  issuerRef:</span><br><span class="line">    name: devops-issuer</span><br><span class="line">    kind: ClusterIssuer</span><br><span class="line">    group: cert-manager.io</span><br></pre></td></tr></table></figure><h3 id="Ingress配置"><a href="#Ingress配置" class="headerlink" title="Ingress配置"></a>Ingress配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: abc-ingress</span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: nginx</span><br><span class="line">  tls:</span><br><span class="line">    - secretName: selfsigned-cert-tls # 证书名,与certificate一致</span><br><span class="line">      hosts:</span><br><span class="line">        - abc.sreok.cn # 证书域名</span><br><span class="line">  rules:</span><br><span class="line">    - host: abc.sreok.cn # 访问域名</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">          - path: /</span><br><span class="line">            #pathType: ImplementationSpecific</span><br><span class="line">            pathType: Prefix</span><br><span class="line">            backend:</span><br><span class="line">              service:</span><br><span class="line">                name: demo # 服务名</span><br><span class="line">                port:</span><br><span class="line">                  number: 80 # 服务的端口号 service port，非pod port</span><br></pre></td></tr></table></figure><h2 id="测试（Harbor平台开启TLS认证）"><a href="#测试（Harbor平台开启TLS认证）" class="headerlink" title="测试（Harbor平台开启TLS认证）"></a><strong>测试（Harbor平台开启TLS认证）</strong></h2><p>修改hosts文件，浏览器访问域名</p><p><img src="/images/image-tixg.png"></p><p><img src="/images/image-oqrj.png"></p><h3 id="系统颁发证书"><a href="#系统颁发证书" class="headerlink" title="系统颁发证书"></a>系统颁发证书</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p><img src="/images/image-iydt.png"></p><p><code>复制ca.crt内容</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;connect in ca.crt&quot; | base64 -d</span><br></pre></td></tr></table></figure><p><img src="/images/image-fhla.png"></p><p>保存到电脑</p><p><img src="/images/image-pblp.png"></p><p><img src="/images/image-faxz.png"></p><p><img src="/images/image-iyyw.png"></p><h4 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h4><p>双击导入<code>ca.crt</code><br><img src="/images/image-mwml.png"></p><p><img src="/images/image-tcdd.png"></p><p><img src="/images/image-ybtx.png"></p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><h5 id="方法一：只更新TLS证书（简单）"><a href="#方法一：只更新TLS证书（简单）" class="headerlink" title="方法一：只更新TLS证书（简单）"></a>方法一：只更新TLS证书（简单）</h5><p><code>将ca证书追加到以下文件</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem</span><br></pre></td></tr></table></figure><p><img src="/images/image-vtnm.png"></p><h5 id="方法二：全部信任此证书"><a href="#方法二：全部信任此证书" class="headerlink" title="方法二：全部信任此证书"></a>方法二：全部信任此证书</h5><p>安装ca-certificates，一般系统是自带的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ca-certificates</span><br></pre></td></tr></table></figure><p>将证书放置以下目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/pki/ca-trust/source/anchors/</span><br></pre></td></tr></table></figure><p>执行信任此证书</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-ca-trust</span><br></pre></td></tr></table></figure><blockquote><p>此操作会更新以下文件，而不是只是tls-ca-bundle.pem</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt</span><br><span class="line">/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem</span><br><span class="line">/etc/pki/ca-trust/extracted/pem/email-ca-bundle.pem</span><br><span class="line">/etc/pki/ca-trust/extracted/pem/objsign-ca-bundle.pem  </span><br></pre></td></tr></table></figure><p>删除时在<code>/etc/pki/ca-trust/source/anchors/</code>文件中删掉对应的ca证书，重新执行<code>update-ca-trust</code>即可。</p></blockquote><p>参考链接：<a href="https://cert-manager.io/docs/configuration/selfsigned/"><em>SelfSigned - cert-manager Documentation</em></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;自签名证书一般用于服务间或内网访问使用，在公网访问会有不安全提示。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;&lt;strong&gt;前提条件&lt;/strong</summary>
      
    
    
    
    <category term="云原生" scheme="https://sreok.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="cert-manager" scheme="https://sreok.github.io/tags/cert-manager/"/>
    
  </entry>
  
  <entry>
    <title>【云原生】阿里云域名使用cert-manager通过acme申请https证书(http01方式)</title>
    <link href="https://sreok.github.io/2024/05/03/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E4%BD%BF%E7%94%A8cert-manager%E9%80%9A%E8%BF%87acme%E7%94%B3%E8%AF%B7https%E8%AF%81%E4%B9%A6(http01%E6%96%B9%E5%BC%8F)/"/>
    <id>https://sreok.github.io/2024/05/03/%E3%80%90%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%91%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E4%BD%BF%E7%94%A8cert-manager%E9%80%9A%E8%BF%87acme%E7%94%B3%E8%AF%B7https%E8%AF%81%E4%B9%A6(http01%E6%96%B9%E5%BC%8F)/</id>
    <published>2024-05-03T09:06:03.000Z</published>
    <updated>2025-06-30T08:28:47.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a><strong>前提条件</strong></h2><ul><li><p>k8s集群&lt;1.19</p></li><li><p>cert-manager</p></li><li><p>ingress-nginx</p></li></ul><h3 id="安装cert-manager"><a href="#安装cert-manager" class="headerlink" title="安装cert-manager"></a><strong>安装cert-manager</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.4/cert-manager.yaml</span><br></pre></td></tr></table></figure><blockquote><p>官方安装文档</p><p><a href="https://cert-manager.io/docs/installation/"><em>https://cert-manager.io/docs/installation/</em></a></p></blockquote><h3 id="安装ingress-nginx"><a href="#安装ingress-nginx" class="headerlink" title="安装ingress-nginx"></a><strong>安装ingress-nginx</strong></h3><p>注意安装镜像地址，改为国内地址，<del>建议使用lank8s.cn</del>，使用文档在官网，修改一下地址即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.11.1/deploy/static/provider/cloud/deploy.yaml</span><br><span class="line">kubectl apply -f deploy.yaml</span><br></pre></td></tr></table></figure><h4 id="查看ingressclass"><a href="#查看ingressclass" class="headerlink" title="查看ingressclass"></a>查看ingressclass</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get ingressclass </span><br><span class="line">NAME    CONTROLLER             PARAMETERS   AGE</span><br><span class="line">nginx   k8s.io/ingress-nginx   &lt;none&gt;       5d</span><br></pre></td></tr></table></figure><p>##</p><h3 id="启动一个http服务"><a href="#启动一个http服务" class="headerlink" title="启动一个http服务"></a><strong>启动一个http服务</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: demo</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: demo</span><br><span class="line">  ports:</span><br><span class="line">    - name: http-port</span><br><span class="line">      port: 80</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 80</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: demo</span><br><span class="line">  labels:</span><br><span class="line">    app: demo</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: demo</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: demo</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: nginx</span><br><span class="line">          image: nginx:1.21.6</span><br><span class="line">          env:</span><br><span class="line">            - name: TZ</span><br><span class="line">              value: Asia/Shanghai</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br></pre></td></tr></table></figure><p><img src="/images/image-hren.png"></p><p><img src="/images/image.png"></p><h2 id="颁发机构（CA）"><a href="#颁发机构（CA）" class="headerlink" title="颁发机构（CA）"></a><strong>颁发机构（CA）</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: cert-manager.io/v1</span><br><span class="line">kind: ClusterIssuer</span><br><span class="line">metadata:</span><br><span class="line">  name: letsencrypt-prod</span><br><span class="line">spec:</span><br><span class="line">  acme:</span><br><span class="line">    server: https://acme-v02.api.letsencrypt.org/directory #生产证书地址</span><br><span class="line">    email: example@vsoul.cn # 接收证书申请信息邮箱</span><br><span class="line">    privateKeySecretRef:</span><br><span class="line">      name: letsencrypt-prod</span><br><span class="line">    solvers:</span><br><span class="line">      - http01:</span><br><span class="line">          ingress:</span><br><span class="line">            class: nginx #填写安装的ingressclass名称</span><br></pre></td></tr></table></figure><p>ACME：自动证书管理环境 协议来确定您是否拥有某个域名，进而确定能否被颁发 Let’s Encrypt 证书。对于这个 challenge，需要传递以下参数：</p><ul><li><p><a href="http://metadata.name/">metadata.name</a>：ClusterIssuer 名称，在 Kubernetes 安装中需要是唯一的。这个名称将在后面的证书颁发示例中用到。</p></li><li><p><a href="http://spec.acme.email/">spec.acme.email</a>：这是您为生成证书而使用 Let’s Encrypt 注册的电子邮件地址。这应该是您的电子邮件。</p></li><li><p>spec.acme.privateKeySecretRef：这是您将用来存储私钥的 Kubernetes secret 的名称。</p></li><li><p>spec.acme.solvers：这应保持不变——它指出了您所使用的 challenge 类型（或者 ACME 所说的解析程序）（HTTP-01 或 DNS-01），以及它应该应用于哪种 Ingress 类型（在这种情况下，将是 nginx）。</p></li></ul><p><img src="/images/image-agwe.png"></p><h3 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a><strong>签发证书</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: demo-ingress</span><br><span class="line">  annotations:</span><br><span class="line">    cert-manager.io/cluster-issuer: letsencrypt-prod  # ClusterIssuer名称 </span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: nginx</span><br><span class="line">  tls:</span><br><span class="line">    - secretName: test-tls # 证书名</span><br><span class="line">      hosts:</span><br><span class="line">        - vsoul.cn # 域名</span><br><span class="line">  rules:</span><br><span class="line">    - host: vsoul.cn # 域名</span><br><span class="line">      http:</span><br><span class="line">        paths:</span><br><span class="line">          - path: /</span><br><span class="line">            #pathType: ImplementationSpecific</span><br><span class="line">            pathType: Prefix</span><br><span class="line">            backend:</span><br><span class="line">              service:</span><br><span class="line">                name: demo # 服务名</span><br><span class="line">                port:</span><br><span class="line">                  number: 80 # 服务的端口号 service port，非pod port</span><br></pre></td></tr></table></figure><p><img src="/images/image-ewnv.png"></p><h2 id="验证HTTPS"><a href="#验证HTTPS" class="headerlink" title="验证HTTPS"></a><strong>验证HTTPS</strong></h2><p><img src="/images/image-hfjr.png"></p><h2 id="故障排查"><a href="#故障排查" class="headerlink" title="故障排查"></a><strong>故障排查</strong></h2><p>Certificate &#x3D;&gt; CertificateRequest &#x3D;&gt; Order &#x3D;&gt; Challenge</p><p>以此使用kubectl get、describe查看状态和日志</p><p>参考链接：<a href="https://cert-manager.io/docs/tutorials/acme/http-validation/"><em>HTTP Validation - cert-manager Documentation</em></a>、<a href="https://letsencrypt.org/zh-cn/docs/challenge-types/"><em>验证方式 - Let’s Encrypt - 免费的SSL&#x2F;TLS证书 (</em></a><a href="http://letsencrypt.org/"><em>letsencrypt.org</em></a><a href="https://letsencrypt.org/zh-cn/docs/challenge-types/"><em>)</em></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;k8s集群&amp;lt;1.19&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cert-</summary>
      
    
    
    
    
    <category term="cert-manager" scheme="https://sreok.github.io/tags/cert-manager/"/>
    
  </entry>
  
</feed>
